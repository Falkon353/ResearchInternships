%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.0%%For: (Andreas Str\612u\647l) ()%%Title: (TUMLogo_oZ_Vollfl_schwarz_CMYK.eps)%%CreationDate: 6/29/09 10:54 AM%%BoundingBox: 278 425 332 454%%HiResBoundingBox: 278.2202 425.252 331.8613 453.5986%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_screens_AI5 1.0 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKCustomColor: 0.901961 0.654902 0 0 (PANTONE 300 C)%%CMYKProcessColor: 1 1 1 1 ([Passermarken])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 65537 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 26.5 16.5 585.5 799.5%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 595 842%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 37.5 619.5 2 1415 1097 282 1 1 67 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:22 3%AI7_GridSettings: 72 8 72 8 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (Live-Angleichungen.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Abpausen) (Abpausen-Suite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Spezialpinsel-Werkzeug.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Spezialpinsel-Werkzeug.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Blendenflecke.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Kalligraphiepinsel-Zusatzmodul) (Kalligrafiepinsel-Werkzeug.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (Kunstpinsel-Werkzeug.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (Kunstpinsel-Werkzeug.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (Kunstpinsel-Werkzeug.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (Kunstpinsel-Werkzeug.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (Symbole.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Zusammengesetzte Form) (Pathfinder-Suite.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe H\237llen-Zusatzmodul) (H\237llen und Verkr\237mmen.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe-Zusatzmodul Interaktiv malen) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp15 Bn%AI5_BeginGradient: (Chrom)(Chrom) 0 6 Bd[<222222222121212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A19191919191919181818181818181817171717171717161616161616161515151515151515141414141414141313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909080808080808080707070707070707060606060606060505050505050504040404040404040303030303030302020202020202010101010101010100000000><6464636362626261616060605F5F5E5E5E5D5D5C5C5C5B5B5A5A5A595958585857575656565555545454535352525251515050504F4F4E4E4E4D4D4C4C4C4B4B4A4A4A494948484847474646464545444444434342424241414040403F3F3E3E3E3D3D3C3C3C3B3B3A3A3A393938383837373636363535343434333332323231313030302F2F2E2E2E2D2D2C2C2C2B2B2A2A2A292928282827272626262525242424232322222221212020201F1F1E1E1E1D1D1C1C1C1B1B1A1A1A191918181817171616161515141414131312121211111010100F0F0E0E0E0D0D0C0C0C0B0B0A0A0A090908080807070606060505040404030302020201010000><FAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948474645444241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625242322><85848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A797978787777767675747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A6969686867676666656564><FFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFA><33323131302F2E2D2D2C2B2A292928272625252423222121201F1E1D1D1C1B1A1A1918171616151413121211100F0E0E0D0C0B0A0A090807060605040302020100>1 %_Br<000001010202020303030404050505060607070708080909090A0A0A0B0B0C0C0C0D0D0E0E0E0F0F10101011111112121313131414151515161617171718181819191A1A1A1B1B1C1C1C1D1D1E1E1E1F1F1F202021212122222323232424242525262626272728282829292A2A2A2B2B2B2C2C2D2D2D2E2E2F2F2F30303131313232323333343434353536363637373838383939393A3A3B3B3B3C3C3D3D3D3E3E3F3F3F40404041414242424343444444454545464647474748484949494A4A4B4B4B4C4C4C4D4D4E4E4E4F4F50505051515252525353535454555555565657575758585959595A5A5A5B5B5C5C5C5D5D5E5E5E5F5F60606061616162626363><000101020203030404050506060707080809090A0A0B0B0C0D0D0E0E0F0F101011111212131314141515161617171819191A1A1B1B1C1C1D1D1E1E1F1F202021212222232324252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F303131323233333434353536363737383839393A3A3B3B3C3D3D3E3E3F3F404041414242434344444545464647474848494A4A4B4B4C4C4D4D4E4E4F4F505051515252535354545556565757585859595A5A5B5B5C5C5D5D5E5E5F5F606061626263636464656566666767686869696A6A6B6B6C6C6D6E6E6F6F707071717272737374747575767677777878797A7A7B7B7C7C7D7D7E7E7F7F8080818182828383848485><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><0000000101010101020202020203030303030404040404050505050506060606060707070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0E0E0E0E0E0F0F0F0F0F10101010101111111111121212121213131313131414141414151515151516161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E1E1E1E1F1F1F1F1F20202020202121212121222222222223232323232424242424252525252526262626262727272727282828282829292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2E2F2F2F2F2F303030303031313131313232323232333333>1 %_Br10 %_Br<DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><8180807F7F7E7D7D7C7C7B7B7A79797878777676757574737372727171706F6F6E6E6D6C6C6B6B6A69696868676666656564646362626161605F5F5E5E5D5C5C5B5B5A5A59585857575655555454535252515150504F4E4E4D4D4C4B4B4A4A49484847474646454444434342414140403F3E3E3D3D3C3B3B3A3A39393837373636353434333332313130302F2F2E2D2D2C2C2B2A2A29292827272626252524232322222120201F1F1E1D1D1C1C1B1B1A19191818171616151514131312121110100F0F0E0E0D0C0C0B0B0A0909080807060605050404030202010100><09090909090909090909090909080808080808080808080808080808080808080808080808070707070707070707070707070707070707070707070707060606060606060606060606060606060606060606060606060505050505050505050505050505050505050505050505050404040404040404040404040404040404040404040404040303030303030303030303030303030303030303030303030302020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010100000000000000000000000000>01 %_Br[1 0 50 92 %_BS%_1 0 50 92 Bs0.133333 0.392157 0.980392 0 1 50 59 %_BS%_0.133333 0.392157 0.980392 0 1 50 59 Bs0.388235 0.521569 1 0.2 1 50 50 %_BS%_0.388235 0.521569 1 0.2 1 50 50 Bs1 0 50 49 %_BS%_1 0 50 49 Bs1 0 50 41 %_BS%_1 0 50 41 Bs0.858823 0.505882 0.035294 0 1 50 0 %_BS%_0.858823 0.505882 0.035294 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Gelb & Blau Kreis)(Gelb & Blau Kreis) 1 2 Bd[<090A0B0C0D0E0F10111112131415161718191A1B1C1D1E1F20212222232425262728292A2B2C2D2E2F30313233333435363738393A3B3C3D3E3F40414243444445464748494A4B4C4D4E4F50515253545555565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576777778797A7B7C7D7E7F80818283848586878888898A8B8C8D8E8F90919293949596979899999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6><0405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A999998979796969595949493939292919190908F8F8E8E8D8D8C8C8B8B8A8A89898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443><00000000000101010101010101010102020202020202020202030303030303030303040404040404040404040505050505050505050506060606060606060607070707070707070707080808080808080808080909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F101010101010101010101111111111111111111212121212121212121213131313131313131313141414141414141414151515151515151515151616161616161616161617171717171717171718181818181818181818191919191919191919191A1A1A1A1A>1 %_Br[0.035294 0.015686 0.760784 0 1 50 14 %_BS%_0.035294 0.015686 0.760784 0 1 50 14 Bs0.964706 1 0.262745 0.101961 1 50 100 %_BS%_0.964706 1 0.262745 0.101961 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Gelb, Lila, Orange, Blau)(Gelb, Lila, Orange, Blau) 0 4 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFB><BEBEBFBFBFBFC0C0C0C0C1C1C1C1C2C2C2C2C3C3C3C3C4C4C4C4C5C5C5C6C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CACACACACBCBCBCBCCCCCCCDCDCDCDCECECECECFCFCFCFD0D0D0D0D1D1D1D1D2D2D2D2D3D3D3D3D4D4D4D5D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9D9DADADADADBDBDBDCDCDCDCDDDDDDDDDEDEDEDEDFDFDFDFE0E0E0E0E1E1E1E1E2E2E2E3E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E8E8E8E8E9E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F1F1F1F2F2F2F2F3F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F8F8F8F9F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFDFDFDFDFEFEFEFEFFFF><ECEBEAEAE9E8E7E6E6E5E4E3E2E2E1E0DFDEDEDDDCDBDADAD9D8D7D6D6D5D4D3D3D2D1D0CFCFCECDCCCBCBCAC9C8C7C7C6C5C4C3C3C2C1C0BFBFBEBDBCBBBBBAB9B8B7B7B6B5B4B3B3B2B1B0AFAFAEADACABABAAA9A8A7A7A6A5A4A3A3A2A1A0A09F9E9D9C9C9B9A999898979695949493929190908F8E8D8C8C8B8A898888878685848483828180807F7E7D7C7C7B7A797878777675747473727170706F6E6D6D6C6B6A696968676665656463626161605F5E5D5D5C5B5A595958575655555453525151504F4E4D4D4C4B4A494948474645454443424141403F3E3D3D3C3B3A3A3938373636353433323231302F2E2E2D2C2B2A2A29282726262524><000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101020202020202020202020202020202020202020202020202020202020202020202020202020202020202030303030303030303030303030303030303030303030303030303030303030303030303030303030303040404040404040404040404040404040404040404040404040404040404040404040404040404040404050505050505050505050505050505050505050505050505050505050505050505050505050505050505060606060606060606060606060606060606060606>1 %_Br<BBBAB9B8B8B7B6B5B4B3B3B2B1B0AFAEAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9998989796959493939291908F8E8E8D8C8B8A8988888786858483838281807F7E7E7D7C7B7A7978787776757473737271706F6E6E6D6C6B6A6968686766656463636261605F5E5E5D5C5B5A5958585756555453535251504F4E4D4D4C4B4A4948484746454443434241403F3E3D3D3C3B3A3938383736353433333231302F2E2D2D2C2B2A2928282726252423232221201F1E1D1D1C1B1A1918181716151413131211100F0E0D0D0C0B0A090808070605040303020100><FFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFBFAFAFAF9F9F9F9F8F8F8F7F7F7F7F6F6F6F5F5F5F4F4F4F4F3F3F3F2F2F2F2F1F1F1F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECEBEBEBEBEAEAEAE9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E4E4E4E3E3E3E3E2E2E2E1E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADADAD9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D5D4D4D4D3D3D3D2D2D2D2D1D1D1D0D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C4C3C3C3C2C2C2C2C1C1C1C0C0C0BFBFBFBFBEBE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><03030303030303030303030303030303030303030303030303030303030303030303030303020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<23242425252627272828292A2A2B2B2C2D2D2E2E2F30303131323233343435353637373838393A3A3B3B3C3D3D3E3E3F40404141424343444445464647474849494A4A4B4C4C4D4D4E4F4F50505151525353545455565657575859595A5A5B5C5C5D5D5E5F5F60606162626363646565666667686869696A6B6B6C6C6D6E6E6F6F70707172727373747575767677787879797A7B7B7C7C7D7E7E7F7F808181828283848485858687878888898A8A8B8B8C8D8D8E8E8F8F909191929293949495959697979898999A9A9B9B9C9D9D9E9E9FA0A0A1A1A2A3A3A4A4A5A6A6A7A7A8A9A9AAAAABACACADADAEAEAFB0B0B1B1B2B3B3B4B4B5B6B6B7B7B8B9B9BABABB><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><E0DFDEDEDDDCDBDAD9D9D8D7D6D5D4D4D3D2D1D0D0CFCECDCCCBCBCAC9C8C7C6C6C5C4C3C2C2C1C0BFBEBDBDBCBBBAB9B8B8B7B6B5B4B4B3B2B1B0AFAFAEADACABAAAAA9A8A7A6A6A5A4A3A2A1A1A09F9E9D9C9C9B9A9998989796959493939291908F8E8E8D8C8B8A8A8988878685858483828180807F7E7D7C7C7B7A7978777776757473727271706F6E6E6D6C6B6A696968676665646463626160605F5E5D5C5B5B5A5958575656555453525251504F4E4D4D4C4B4A4948484746454444434241403F3F3E3D3C3B3A3A3938373636353433323131302F2E2D2C2C2B2A2928282726252423232221201F1E1E1D1C1B1A1A1918171615151413121110100F0E><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020203030303030303030303030303030303030303030303030303030303030303030303030303030303030303>1 %_Br[0.984314 1 0.141176 0.023529 1 50 95 %_BS%_0.984314 1 0.141176 0.023529 1 50 95 Bs0 0.745098 0.92549 0 1 50 65 %_BS%_0 0.745098 0.92549 0 1 50 65 Bs0.733333 1 0.054902 0.011765 1 50 35 %_BS%_0.733333 1 0.054902 0.011765 1 50 35 Bs0.137255 0 0.878431 0 1 50 5 %_BS%_0.137255 0 0.878431 0 1 50 5 BsBD%AI5_EndGradient%AI5_BeginGradient: (Gelb, Orange-Radial)(Gelb, Orange-Radial) 1 2 Bd[<18181818181717171717171717171616161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0909090909090908080808080808070707070707070606060606060606050505050505050404040404040403030303030303020202020202020101010101010100000000><0001010203040505060708090A0A0B0C0D0E0F1011111213141516171819191A1B1C1D1E1F20212223232425262728292A2B2C2D2E2F2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9><EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9>01 %_Br[0.094118 0 0.933333 0 1 52 19 %_BS%_0.094118 0 0.933333 0 1 52 19 Bs0 0.662745 0.913725 0 1 50 100 %_BS%_0 0.662745 0.913725 0 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Gelb, Violett-Radial)(Gelb, Violett-Radial) 1 2 Bd[<090A0B0C0D0E0F10111112131415161718191A1B1C1D1E1F20212222232425262728292A2B2C2D2E2F30313233333435363738393A3B3C3D3E3F40414243444445464748494A4B4C4D4E4F50515253545555565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576777778797A7B7C7D7E7F80818283848586878888898A8B8C8D8E8F90919293949596979899999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6><0405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A999998979796969595949493939292919190908F8F8E8E8D8D8C8C8B8B8A8A89898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443><00000000000101010101010101010102020202020202020202030303030303030303040404040404040404040505050505050505050506060606060606060607070707070707070707080808080808080808080909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F101010101010101010101111111111111111111212121212121212121213131313131313131313141414141414141414151515151515151515151616161616161616161617171717171717171718181818181818181818191919191919191919191A1A1A1A1A>1 %_Br[0.035294 0.015686 0.760784 0 1 50 14 %_BS%_0.035294 0.015686 0.760784 0 1 50 14 Bs0.964706 1 0.262745 0.101961 1 50 100 %_BS%_0.964706 1 0.262745 0.101961 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Gr\637nblau)(Gr\637nblau) 0 2 Bd[<A5A5A6A6A6A7A7A7A8A8A8A9A9AAAAAAABABABACACACADADADAEAEAEAFAFAFB0B0B0B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9BABABABBBBBBBCBCBCBDBDBDBEBEBEBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C5C5C5C6C6C6C7C7C7C8C8C8C9C9CACACACBCBCBCCCCCCCDCDCDCECECECFCFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D4D5D5D5D6D6D6D7D7D7D8D8D9D9D9DADADADBDBDBDCDCDCDDDDDDDEDEDEDFDFDFE0E0E1E1E1E2E2E2E3E3E3E4E4E4E5E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEDEEEEEEEFEFEFF0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F8F8F9F9F9FAFAFAFBFBFBFCFC><000102030405060708090A0B0C0D0E0F10111213141415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4><FAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br[0.988235 0.956863 0 0 1 50 100 %_BS%_0.988235 0.956863 0 0 1 50 100 Bs0.647059 0 0.980392 0 1 50 0 %_BS%_0.647059 0 0.980392 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Orange, Gr\637n, Lila)(Orange, Gr\637n, Lila) 0 3 Bd[<DCDCDCDCDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D2D2D2D2D2D2D2D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCECECECECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C5C5C5C5C5C5C5C4C4C4C4C4C4C4C3C3C3C3C3C3C3C3C2C2C2C2C2C2C2C1C1C1C1C1C1C1C0C0C0C0C0C0C0C0BFBFBFBFBFBFBFBEBEBEBEBEBEBEBDBDBDBDBDBDBDBDBCBCBCBCBCBCBCBBBBBBBB><5D5E5E5F6060616262636464656666676868696A6A6B6C6C6D6E6E6F7070717273737475757677777879797A7B7B7C7D7D7E7F7F8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919293939495959697979899999A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C3C3C4C5C5C6C7C7C8C9C9CACBCBCCCDCDCECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9EAEBECECEDEEEEEFF0F0F1F2F2F3F4F4F5F6F6F7F8F8F9FAFAFBFCFCFDFEFEFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E><4A4A494949494848484747474646464645454544444444434343424242414141414040403F3F3F3F3E3E3E3D3D3D3C3C3C3C3B3B3B3A3A3A3A3939393838383737373736363635353534343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2D2C2C2C2B2B2B2A2A2A2A292929282828282727272626262525252524242423232323222222212121202020201F1F1F1E1E1E1E1D1D1D1C1C1C1B1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111111010100F0F0F0E0E0E0E0D0D0D0C0C0C0C0B0B0B0A0A0A0909090908080807070707060606050505040404040303>1 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC><BEBEBDBDBCBCBBBBBABABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAFAEAEADADACACABABABAAAAA9A9A8A8A8A7A7A6A6A5A5A4A4A4A3A3A2A2A1A1A0A0A09F9F9E9E9D9D9C9C9C9B9B9A9A99999998989797969695959594949393929291919190908F8F8E8E8E8D8D8C8C8B8B8A8A8A898988888787868686858584848383828282818180807F7F7F7E7E7D7D7C7C7B7B7B7A7A79797878777777767675757474737373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696868686767666665656464646363626261616160605F5F5E5E5D5D><ECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><00000101010202020303030404040505050606060707070808080909090A0A0A0B0B0B0C0C0C0D0D0D0E0E0E0F0F0F10101011111112121213131414141515151616161717171818181919191A1A1A1B1B1B1C1C1C1D1D1D1E1E1E1F1F1F2020202121212222222323232424242525252626262727272828282929292A2A2A2B2B2B2C2C2C2D2D2D2E2E2E2F2F2F30303031313132323233333334343435353536363637373738383939393A3A3A3B3B3B3C3C3C3D3D3D3E3E3E3F3F3F4040404141414242424343434444444545454646464747474848484949494A4A>1 %_Br[0.733333 1 0.054902 0.011765 1 50 100 %_BS%_0.733333 1 0.054902 0.011765 1 50 100 Bs0.862745 0.364706 1 0.290196 1 50 50 %_BS%_0.862745 0.364706 1 0.290196 1 50 50 Bs0 0.745098 0.92549 0 1 50 0 %_BS%_0 0.745098 0.92549 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Regenbogen)(Regenbogen) 0 6 Bd[<F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEE><434343424242424141414141404040403F3F3F3F3F3E3E3E3E3D3D3D3D3D3C3C3C3C3B3B3B3B3B3A3A3A3A3939393938383838383737373736363636363535353534343434343333333332323232323131313130303030302F2F2F2F2E2E2E2E2E2D2D2D2D2C2C2C2C2C2B2B2B2B2A2A2A2A2A29292929282828282827272727262626262525252525242424242323232323222222222121212121202020201F1F1F1F1F1E1E1E1E1D1D1D1D1D1C1C1C1C1B1B1B1B1B1A1A1A1A1919191919181818181717171717161616161515151514141414141313131312121212121111111110101010100F0F0F0F0E0E0E0E0E0D0D0D0D0C0C0C><1A1A1A1A1A19191919191919191919181818181818181818171717171717171717171616161616161616161515151515151515151514141414141414141413131313131313131312121212121212121212111111111111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A090909090909090909080808080808080808080707070707070707070606060606060606060505050505050505050504040404040404040403030303030303030303020202020202020202010101010101010101010000000000>1 %_Br<C5C5C5C6C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CACACACACACBCBCBCBCCCCCCCCCDCDCDCDCECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9D9DADADADADBDBDBDBDBDCDCDCDCDDDDDDDDDEDEDEDEDFDFDFDFE0E0E0E0E0E1E1E1E1E2E2E2E2E3E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E6E7E7E7E7E8E8E8E8E9E9E9E9EAEAEAEAEBEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F4F4F4F4F5F5F5F5F6F6F6><32333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1F1F1F2020202020202121212121212222222222232323232323242424242424252525252525262626262627272727272728282828282829292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F3030303030303131313131313232323232323333333333343434343434353535353535363636363637373737373738383838383839393939393A3A3A3A3A3A3B3B3B3B3B3B3C3C3C3C3C3D3D3D3D3D3D3E3E3E3E3E3E3F3F3F3F3F3F4040404040414141414141424242424242434343><0000000001010101010101010202020202020202030303030303030304040404040404040505050505050505060606060606060607070707070707070808080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010101010101011111111111111121212121212121213131313131313131414141414141414151515151515151516161616161616161717171717171717181818181818181819191919191919191A1A1A1A>1 %_Br<D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCFCFCECECECECECECECECECECECDCDCDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCBCACACACACACACACACACACAC9C9C9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5><313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232><F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><0A0A0A0A0A0A0A0A0A0A0A09090909090909090909090909090909090909090909080808080808080808080808080808080808080808070707070707070707070707070707070707070707070606060606060606060606060606060606060606060505050505050505050505050505050505050505050504040404040404040404040404040404040404040403030303030303030303030303030303030303030303020202020202020202020202020202020202020202010101010101010101010101010101010101010101010000000000000000000000>1 %_Br<18191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9><00000101010102020202030303030404040405050505060606060707070708080808090909090A0A0A0A0B0B0B0B0C0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F1010101111111112121212131313131414141415151515161616161717171718181818191919191A1A1A1A1B1B1B1B1C1C1C1C1D1D1D1D1E1E1E1E1F1F1F1F2020202021212122222222232323232424242425252525262626262727272728282828292929292A2A2A2A2B2B2B2B2C2C2C2C2D2D2D2D2E2E2E2E2F2F2F2F303030303131><EEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6><000000000000000000000101010101010101010101010101010101010102020202020202020202020202020202020202020303030303030303030303030303030303030304040404040404040404040404040404040404050505050505050505050505050505050505050506060606060606060606060606060606060606070707070707070707070707070707070707070808080808080808080808080808080808080808090909090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A>1 %_Br<0000000000000101010101010101010102020202020202020202030303030303030303030404040404040404040405050505050505050505060606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F1010101010101010101011111111111111111111121212121212121212121313131313131313131314141414141414141414151515151515151515151616161616161616161617171717171717171717181818181818><F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE>01 %_Br[0 0.933333 0.047059 0 1 50 100 %_BS%_0 0.933333 0.047059 0 1 50 100 Bs0.964706 1 0.262745 0.101961 1 50 80 %_BS%_0.964706 1 0.262745 0.101961 1 50 80 Bs0.772549 0.196078 0.121569 0 1 50 60 %_BS%_0.772549 0.196078 0.121569 0 1 50 60 Bs0.85098 0.192157 0.964706 0.039216 1 50 40 %_BS%_0.85098 0.192157 0.964706 0.039216 1 50 40 Bs0.094118 0 0.933333 0 1 50 20 %_BS%_0.094118 0 0.933333 0 1 50 20 Bs0 0.945098 0.937255 0 1 50 0 %_BS%_0 0.945098 0.937255 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Rosa, Gelb, Gr\637n )(Rosa, Gelb, Gr\637n ) 0 3 Bd[<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485>0<D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1>01 %_Br0.078431<C9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C2C2C1C1C0C0BFBEBEBDBDBCBCBBBBBAB9B9B8B8B7B6B6B5B5B4B3B3B2B1B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6A6A5A4A4A3A2A2A1A09F9F9E9D9D9C9B9A9A999898979695959493929291908F8F8E8D8C8C8B8A898988878686858483838281807F7F7E7D7C7B7B7A7978787776757473737271706F6F6E6D6C6B6B6A6968676666656463626161605F5E5D5C5C5B5A5958575756555453525151504F4E4D4C4B4A4A49484746454444434241403F3E3D3C3C3B3A39383736353434333231302F2E2D2C2B2B2A29282726252423222121201F1E1D1C1B1A19181716161514131211100F0E0D0C0B0A0908080706050403020100><000001010102020203030404050506060707080809090A0B0B0C0C0D0E0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122232324252526272828292A2B2B2C2D2E2E2F303131323334343536373738393A3B3B3C3D3E3F3F4041424343444546474748494A4B4C4C4D4E4F5050515253545556565758595A5B5B5C5D5E5F6061616263646566676868696A6B6C6D6E6F6F70717273747576777878797A7B7C7D7E7F80818182838485868788898A8B8C8D8D8E8F909192939495969798999A9B9C9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5>01 %_Br[0.521569 0 0.819608 0 1 50 100 %_BS%_0.521569 0 0.819608 0 1 50 100 Bs0.078431 0 0.835294 0 1 50 64 %_BS%_0.078431 0 0.835294 0 1 50 64 Bs0.078431 0.788235 0 0 1 57 0 %_BS%_0.078431 0.788235 0 0 1 57 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Rot & Gelb)(Rot & Gelb) 0 2 Bd[<18181818181817171717171717171717161616161616161616161515151515151515151514141414141414141414131313131313131313131212121212121212121211111111111111111111101010101010101010100F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A090909090909090909090808080808080808080807070707070707070707060606060606060606060505050505050505050504040404040404040404030303030303030303030202020202020202020201010101010101010101000000000000><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2><EEEEEEEDEDEDEDECECECECECEBEBEBEBEAEAEAEAEAE9E9E9E9E8E8E8E8E8E7E7E7E7E6E6E6E6E6E5E5E5E5E4E4E4E4E4E3E3E3E3E2E2E2E2E2E1E1E1E1E0E0E0E0DFDFDFDFDFDEDEDEDEDDDDDDDDDDDCDCDCDCDBDBDBDBDBDADADADAD9D9D9D9D9D8D8D8D8D7D7D7D7D7D6D6D6D6D5D5D5D5D5D4D4D4D4D3D3D3D3D3D2D2D2D2D1D1D1D1D1D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCDCCCCCCCCCBCBCBCBCBCACACACAC9C9C9C9C9C8C8C8C8C7C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C2C1C1C1C1C0C0C0C0C0BFBFBFBFBEBEBEBEBEBDBDBDBDBCBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8>01 %_Br[0 0.94902 0.721569 0 1 50 100 %_BS%_0 0.94902 0.721569 0 1 50 100 Bs0.094118 0 0.933333 0 1 50 0 %_BS%_0.094118 0 0.933333 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Schwarz & Wei\647)(Schwarz & Wei\647) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Schwarz, Wei\647)(Schwarz, Wei\647) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Stahlgrau)(Stahlgrau) 0 3 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 70 %_BS%_1 0 50 70 Bs0 0 50 0 %_BS%_0 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Violett, Rot, Gelb)(Violett, Rot, Gelb) 0 3 Bd[<00000000000000010101010101010101010101010202020202020202020202020303030303030303030303030304040404040404040404040404050505050505050505050505050606060606060606060606060707070707070707070707070708080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313><F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><DEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFE0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1>01 %_Br<F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2><26272828292A2B2B2C2D2E2E2F303131323334353536373838393A3B3B3C3D3E3E3F404141424344454546474848494A4B4B4C4D4E4E4F505152525354555556575858595A5B5B5C5D5E5E5F606162626364656566676868696A6B6B6C6D6E6F6F707172727374757576777878797A7B7C7C7D7E7F7F808182828384858586878888898A8B8C8C8D8E8F8F909192929394959596979899999A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3B4B5B6B6B7B8B9B9BABBBCBCBDBEBFBFC0C1C2C3C3C4C5C6C6C7C8C9C9CACBCCCCCDCECFCFD0D1D2D3D3D4D5D6D6D7D8D9D9DADBDCDCDDDE><0606060606060606060606060606060606060606060505050505050505050505050505050505050505050505050505050505050505050505050505050504040404040404040404040404040404040404040404040404040404040404040404040404040404030303030303030303030303030303030303030303030303030303030303030303030303030303030202020202020202020202020202020202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000>1 %_Br[0.07451 0 0.882353 0 1 50 100 %_BS%_0.07451 0 0.882353 0 1 50 100 Bs0 0.94902 0.870588 0 1 50 50 %_BS%_0 0.94902 0.870588 0 1 50 50 Bs0.945098 1 0.14902 0.023529 1 50 0 %_BS%_0.945098 1 0.14902 0.023529 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Wei\647-Rot-Radial)(Wei\647-Rot-Radial) 1 18 Bd[00.9450980.93725501 %_Br00.9450980.93725501 %_Br0<F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br10 %_Br0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>01 %_Br00.9450980.93725501 %_Br0<F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br10 %_Br0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>01 %_Br00.9450980.93725501 %_Br0<F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br10 %_Br0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>01 %_Br00.9450980.93725501 %_Br0<F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br10 %_Br0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>01 %_Br[0 0.945098 0.937255 0 1 50 0 %_BS%_0 0.945098 0.937255 0 1 50 0 Bs0 0.945098 0.937255 0 1 50 0.005 %_BS%_0 0.945098 0.937255 0 1 50 0 Bs0 0.945098 0.937255 0 1 50 12.4975 %_BS%_0 0.945098 0.937255 0 1 50 12.5 Bs0 0 0 0 1 50 12.5025 %_BS%_0 0 0 0 1 50 12.5 Bs0 0 0 0 1 50 24.9975 %_BS%_0 0 0 0 1 50 25 Bs0 0.945098 0.937255 0 1 50 25.0025 %_BS%_0 0.945098 0.937255 0 1 50 25 Bs0 0.945098 0.937255 0 1 50 37.4975 %_BS%_0 0.945098 0.937255 0 1 50 37.5 Bs0 0 0 0 1 50 37.5025 %_BS%_0 0 0 0 1 50 37.5 Bs0 0 0 0 1 50 49.9975 %_BS%_0 0 0 0 1 50 50 Bs0 0.945098 0.937255 0 1 50 50.0025 %_BS%_0 0.945098 0.937255 0 1 50 50 Bs0 0.945098 0.937255 0 1 50 62.4975 %_BS%_0 0.945098 0.937255 0 1 50 62.5 Bs0 0 0 0 1 50 62.5025 %_BS%_0 0 0 0 1 50 62.5 Bs0 0 0 0 1 50 74.9975 %_BS%_0 0 0 0 1 50 75 Bs0 0.945098 0.937255 0 1 50 75.0025 %_BS%_0 0.945098 0.937255 0 1 50 75 Bs0 0.945098 0.937255 0 1 50 87.4975 %_BS%_0 0.945098 0.937255 0 1 50 87.5 Bs0 0 0 0 1 50 87.5025 %_BS%_0 0 0 0 1 50 87.5 Bs0 0 0 0 1 50 99.995 %_BS%_0 0 0 0 1 50 100 Bs0 0.945098 0.937255 0 1 50 100 %_BS%_0 0.945098 0.937255 0 1 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Backsteine)(Backsteine) 1.6 1.6 73.6 73.6 [%AI3_Tile(0 O 0 R 0.203922 0.956863 1 0.129412 k 0.203922 0.956863 1 0.129412 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1.6 1.6 m1.6 73.6 L73.6 73.6 L73.6 1.6 L1.6 1.6 Lf%AI6_EndPatternLayer) &(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR1.6 70.01 m73.6 70.01 lS1.6 62.809 m73.6 62.809 LS1.6 55.609 m73.6 55.609 LS1.6 48.408 m73.6 48.408 LS1.6 41.208 m73.6 41.208 LS1.6 34.007 m73.6 34.007 LS1.6 26.807 m73.6 26.807 LS1.6 19.606 m73.6 19.606 LS1.6 12.406 m73.6 12.406 LS1.6 5.206 m73.6 5.206 LS70.01 70.01 m70.01 62.822 lS55.61 70.01 m55.61 62.822 LS41.21 70.01 m41.21 62.822 LS26.81 70.01 m26.81 62.822 LS12.41 70.01 m12.41 62.822 LS70.01 55.572 m70.01 48.385 lS55.61 55.572 m55.61 48.385 LS41.21 55.572 m41.21 48.385 LS26.81 55.572 m26.81 48.385 LS12.41 55.572 m12.41 48.385 LS70.01 41.197 m70.01 34.01 lS55.61 41.197 m55.61 34.01 LS41.21 41.197 m41.21 34.01 LS26.81 41.197 m26.81 34.01 LS12.41 41.197 m12.41 34.01 LS70.01 26.822 m70.01 19.635 lS55.61 26.822 m55.61 19.635 LS41.21 26.822 m41.21 19.635 LS26.81 26.822 m26.81 19.635 LS12.41 26.822 m12.41 19.635 LS70.01 12.385 m70.01 5.197 lS55.61 12.385 m55.61 5.197 LS41.21 12.385 m41.21 5.197 LS26.81 12.385 m26.81 5.197 LS12.41 12.385 m12.41 5.197 LS62.797 5.197 m62.797 1.6 LS48.397 5.197 m48.397 1.6 LS33.997 5.197 m33.997 1.6 LS19.597 5.197 m19.597 1.6 LS5.197 5.197 m5.197 1.6 lS62.797 19.635 m62.797 12.447 LS48.397 19.635 m48.397 12.447 LS33.997 19.635 m33.997 12.447 LS19.597 19.635 m19.597 12.447 LS5.197 19.635 m5.197 12.447 lS62.797 34.01 m62.797 26.822 LS48.397 34.01 m48.397 26.822 LS19.597 34.01 m19.597 26.822 LS5.197 34.01 m5.197 26.822 lS62.797 48.385 m62.797 41.197 LS48.397 48.385 m48.397 41.197 LS33.997 48.385 m33.997 41.197 LS19.597 48.385 m19.597 41.197 LS5.197 48.385 m5.197 41.197 lS62.797 62.822 m62.797 55.635 LS48.397 62.822 m48.397 55.635 LS33.997 62.822 m33.997 55.635 LS19.597 62.822 m19.597 55.635 LS5.197 62.822 m5.197 55.635 lS62.797 73.5589 m62.797 70.072 LS48.397 73.5589 m48.397 70.072 LS33.997 73.5589 m33.997 70.072 LS19.597 73.5589 m19.597 70.072 LS5.197 73.5589 m5.197 70.072 lS33.997 34.01 m33.997 26.822 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Bl\612tter)(Bl\612tter) 1 1 52.733 89.816 [%AI3_Tile(0 O 0 R 0.070588 0.207843 0.941176 0 k 0.070588 0.207843 0.941176 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR52.733 89.816 m52.733 1 L1 1 L1 89.816 L52.733 89.816 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.792157 0.058824 1 0 k 0.792157 0.058824 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR25.317 2.083 m25.994 2.283 26.284 2.435 V24.815 5.147 29.266 9.428 30.186 10.168 C30.787 9.943 30.907 7.41 30.23 6.073 C31.073 6.196 33.262 4.818 34.02 3.529 C34.085 4.217 35.655 7.158 36.481 7.535 C35.561 7.933 34.896 9.406 34.134 10.854 C35.156 11.021 36.555 10.1 38.026 9.195 C38.541 9.996 39.915 10.968 41.174 11.484 C40.086 12.171 39.591 12.912 39.094 14.372 C38.052 13.806 35.865 13.657 35.336 13.944 C35.85 15.057 38.096 15.6 38.827 15.547 C38.573 16.409 38.425 18.562 38.598 21.155 C36.939 19.839 35.393 18.522 33.734 18.58 C34.003 17.158 33.367 15.353 32.99 14.86 C32.417 15.604 32.006 16.431 32.361 18.408 C30.908 18.893 29.671 19.439 28.297 20.697 C28.297 18.866 27.725 17.664 26.857 16.388 C28.117 15.9 29.389 14.697 29.385 13.658 C28.537 13.81 26.845 14.554 26.352 15.547 C25.634 14.8 23.95 13.491 22.346 13.487 C23.534 12.632 24.454 11.598 24.549 9.686 C25.802 10.657 28.255 11.272 29.635 10.674 C24.794 6.438 25.262 3.405 25.317 2.083 Cf12.412 33.743 m11.887 33.272 11.691 33.01 V14.182 31.192 11.928 25.366 11.415 24.303 C10.776 24.247 9.369 26.988 9.405 28.486 C8.273 27.73 6.608 27.851 5.006 28.137 C5.578 27.049 5.177 25.104 4.376 24.303 C5.378 24.339 6.729 23.624 8.038 22.643 C7.203 21.823 5.376 21.984 3.46 22.643 C3.46 21.27 2.638 19.533 1.801 18.351 C3.117 18.408 4.262 17.722 5.12 16.691 C5.785 18.26 7.819 19.373 8.725 19.324 C8.742 17.959 7.169 15.869 6.147 15.47 C6.747 14.801 7.766 13.27 8.725 10.854 C9.524 12.78 10.694 14.022 11.927 14.955 C10.785 16.517 10.959 17.388 11.358 18.866 C12.101 18.325 13.132 17.893 13.303 15.89 C15.02 16.176 16.156 16.104 17.653 15.203 C17.198 16.865 17.195 18.466 17.515 20.166 C15.665 20.026 14.105 20.239 13.075 21.728 C13.905 21.955 16.165 22.014 17.039 21.082 C17.366 22.064 18.261 23.47 19.707 24.164 C18.267 24.424 17.282 25.523 16.373 27.209 C15.66 25.793 13.433 24.128 11.93 24.073 C13.933 28.137 13.933 31.055 12.412 33.743 Cf31.125 30.5 m31.445 31.128 31.648 31.385 V34.045 29.444 38.851 32.752 39.746 33.521 C39.636 34.153 37.511 35.29 35.794 34.26 C36.234 35.549 35.332 37.51 34.134 38.552 C35.873 38.451 38.019 39.813 38.541 40.555 C38.763 39.577 39.946 38.307 41.231 37.293 C41.582 38.266 40.887 40.384 39.971 41.986 C41.206 42.487 42.318 43.417 42.776 44.676 C43.233 43.359 44.236 42.685 45.58 41.929 C44.421 40.502 43.64 38.328 43.92 37.465 C45.243 37.8 46.814 40.518 46.937 41.607 C47.812 40.841 49.366 40.154 51.947 39.848 C50.246 38.77 49.884 36.778 49.3 35.347 C48.152 35.794 45.983 35.853 45.008 35.29 C45.721 34.711 47.061 34.16 49.071 34.146 C49.071 32.601 49.534 31.469 50.788 30.254 C49.065 30.267 46.965 29.781 45.469 29.389 C45.221 30.718 44.378 32.314 43.233 32.715 C43.227 31.854 43.493 29.605 44.378 28.938 C43.513 28.37 42.26 26.993 41.803 25.276 C41.181 26.601 40.32 27.906 38.457 28.35 C39.642 29.403 40.477 31.42 40.143 32.887 C35.091 28.905 32.414 30.203 31.125 30.5 Cf25.317 46.491 m25.994 46.691 26.284 46.843 V24.815 49.556 29.266 53.837 30.186 54.576 C30.787 54.351 30.907 51.818 30.23 50.482 C31.073 50.605 33.262 49.227 34.02 47.938 C34.085 48.625 35.655 51.566 36.481 51.944 C35.561 52.341 34.896 53.814 34.134 55.263 C35.156 55.43 36.555 54.508 38.026 53.603 C38.541 54.404 39.915 55.377 41.174 55.892 C40.086 56.579 39.591 57.321 39.094 58.78 C38.052 58.215 35.865 58.065 35.336 58.353 C35.85 59.465 38.096 60.008 38.827 59.955 C38.573 60.817 38.425 62.97 38.598 65.563 C36.939 64.247 35.393 62.931 33.734 62.988 C34.003 61.567 33.367 59.761 32.99 59.268 C32.417 60.012 32.006 60.839 32.361 62.817 C30.908 63.302 29.671 63.847 28.297 65.106 C28.297 63.274 27.725 62.073 26.857 60.796 C28.117 60.308 29.389 59.106 29.385 58.067 C28.537 58.219 26.845 58.963 26.352 59.955 C25.634 59.209 23.95 57.899 22.346 57.895 C23.534 57.041 24.454 56.006 24.549 54.094 C25.802 55.065 28.255 55.68 29.635 55.083 C24.794 50.846 25.262 47.814 25.317 46.491 Cf12.412 78.151 m11.887 77.68 11.691 77.418 V14.182 75.601 11.928 69.774 11.415 68.711 C10.776 68.655 9.369 71.396 9.405 72.894 C8.273 72.138 6.608 72.259 5.006 72.545 C5.578 71.458 5.177 69.512 4.376 68.711 C5.378 68.747 6.729 68.032 8.038 67.052 C7.203 66.231 5.376 66.393 3.46 67.052 C3.46 65.678 2.638 63.941 1.801 62.759 C3.117 62.817 4.262 62.13 5.12 61.1 C5.785 62.669 7.819 63.781 8.725 63.732 C8.742 62.367 7.169 60.277 6.147 59.878 C6.747 59.209 7.766 57.678 8.725 55.263 C9.524 57.189 10.694 58.431 11.927 59.364 C10.785 60.925 10.959 61.796 11.358 63.274 C12.101 62.734 13.132 62.301 13.303 60.298 C15.02 60.584 16.156 60.512 17.653 59.612 C17.198 61.273 17.195 62.874 17.515 64.574 C15.665 64.434 14.105 64.648 13.075 66.136 C13.905 66.363 16.165 66.422 17.039 65.49 C17.366 66.472 18.261 67.878 19.707 68.572 C18.267 68.832 17.282 69.931 16.373 71.617 C15.66 70.202 13.433 68.536 11.93 68.482 C13.933 72.545 13.933 75.464 12.412 78.151 Cf31.125 74.908 m31.445 75.537 31.648 75.794 V34.045 73.853 38.851 77.161 39.746 77.929 C39.636 78.562 37.511 79.698 35.794 78.668 C36.234 79.957 35.332 81.918 34.134 82.96 C35.873 82.86 38.019 84.221 38.541 84.963 C38.763 83.986 39.946 82.716 41.231 81.701 C41.582 82.675 40.887 84.792 39.971 86.394 C41.206 86.895 42.318 87.825 42.776 89.084 C43.233 87.768 44.236 87.093 45.58 86.337 C44.421 84.91 43.64 82.736 43.92 81.873 C45.243 82.208 46.814 84.926 46.937 86.016 C47.812 85.249 49.366 84.563 51.947 84.257 C50.246 83.179 49.884 81.187 49.3 79.756 C48.152 80.203 45.983 80.262 45.008 79.698 C45.721 79.119 47.061 78.569 49.071 78.554 C49.071 77.009 49.534 75.877 50.788 74.663 C49.065 74.675 46.965 74.189 45.469 73.798 C45.221 75.126 44.378 76.723 43.233 77.123 C43.227 76.262 43.493 74.013 44.378 73.347 C43.513 72.779 42.26 71.401 41.803 69.684 C41.181 71.009 40.32 72.314 38.457 72.759 C39.642 73.812 40.477 75.829 40.143 77.295 C35.091 73.313 32.414 74.611 31.125 74.908 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Dpllinie1.2.Au\647en)(Dpllinie1.2.Au\647en) 1 1.0003 39.2706 39.271 [%AI3_Tile(0 O 0 R 0.815686 0.333333 0.180392 0 k 0.815686 0.333333 0.180392 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR39.2708 26.6602 m13.6111 26.6602 L13.6111 1.0005 L22.1751 1 L22.1751 18.096 L39.2708 18.096 L39.2708 26.6602 Lf39.2708 15.578 m24.6928 15.578 L24.6928 1 L25.367 1 L25.367 14.9038 L39.2708 14.9038 L39.2708 15.578 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Dpllinie1.2.Innen)(Dpllinie1.2.Innen) 1 1 39.2705 39.2706 [%AI3_Tile(0 O 0 R 0.815686 0.333333 0.180392 0 k 0.815686 0.333333 0.180392 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.2702 22.175 m39.2702 13.6108 L26.66 13.6108 L26.66 1.0003 L18.0958 1.0003 L18.0948 22.175 L18.0958 22.175 L18.0958 22.1752 L39.2702 22.175 Lf39.2708 24.6929 m15.5779 24.6929 L15.5779 1.0003 L14.9037 1.0003 L14.9032 25.3675 L39.2708 25.3675 L39.2708 24.6929 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Dpllinie1.2.Kante)(Dpllinie1.2.Kante) 1 1 39.2706 39.2706 [%AI3_Tile(0 O 0 R 0.815686 0.333333 0.180392 0 k 0.815686 0.333333 0.180392 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR39.2704 18.0958 m39.2704 26.6598 L1.0001 26.6598 L1.0001 18.0958 L39.2704 18.0958 Lf39.2704 14.9037 m39.2704 15.5776 L1.0001 15.5776 L1.0001 14.9037 L39.2704 14.9037 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Ecke.Au\647en)(Ecke.Au\647en) 1 1.0004 31.6124 31.6127 [%AI3_Tile(0 O 0 R 0.34902 0.270588 0.25098 0 k 0.34902 0.270588 0.25098 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR31.6118 5.4917 m27.1221 5.4917 L27.1205 1.0011 L27.8031 1.0011 L27.8031 4.8091 L31.6118 4.8091 L31.6118 5.4917 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.239216 0.176471 0.172549 0 k 0.239216 0.176471 0.172549 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR31.6149 9.5062 m23.1111 9.5062 L23.1111 1.0015 L27.1205 1.0015 L27.1205 5.493 L31.6144 5.493 L31.6149 9.5062 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.466667 0.372549 0.345098 0.007843 k 0.466667 0.372549 0.345098 0.007843 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR31.6124 10.485 m22.1297 10.485 L22.1292 1.0015 L23.1084 1.0015 L23.1084 9.5049 L31.6124 9.5049 L31.6124 10.485 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.34902 0.270588 0.25098 0 k 0.34902 0.270588 0.25098 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR31.6129 17.2066 m15.4064 17.2085 L15.4064 1 L22.1301 1 L22.1301 10.4868 L31.6129 10.4868 L31.6129 17.2066 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.54902 0.454902 0.419608 0.070588 k 0.54902 0.454902 0.419608 0.070588 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR31.6149 18.3658 m14.2517 18.3658 L14.2515 1.0009 L15.4043 1.0009 L15.4043 17.2093 L31.6149 17.2093 L31.6149 18.3658 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.466667 0.372549 0.345098 0.007843 k 0.466667 0.372549 0.345098 0.007843 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR31.6124 30.4755 m2.1395 30.4755 L2.1395 1.0015 L14.249 1 L14.249 18.366 L31.6149 18.366 L31.6124 30.4755 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.615686 0.521569 0.486274 0.2 k 0.615686 0.521569 0.486274 0.2 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR15.4066 16.847 m14.2778 18.3257 l15.4066 17.2057 l15.4066 16.847 lf%AI6_EndPatternLayer) &(0 O 0 R 0.54902 0.454902 0.419608 0.070588 k 0.54902 0.454902 0.419608 0.070588 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR23.1095 9.1906 m22.1759 10.4392 l23.1082 9.505 l23.1095 9.1906 lf%AI6_EndPatternLayer) &(0 O 0 R 0.466667 0.372549 0.345098 0.007843 k 0.466667 0.372549 0.345098 0.007843 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR27.8039 4.6026 m27.1619 5.4533 l27.8029 4.8093 l27.8039 4.6026 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Gelbe Streifen)(Gelbe Streifen) 8.4499 4.6 80.4499 76.6 [%AI3_Tile(0 O 0 R 0 0.490196 0.929412 0 k 0 0.490196 0.929412 0 K) @(%AI6_BeginPatternLayer0 J 0 j 3.6 w 4 M []0 d0 XR8.1999 8.1999 m80.6999 8.1999 LS8.1999 22.6 m80.6999 22.6 LS8.1999 37.0001 m80.6999 37.0001 LS8.1999 51.3999 m80.6999 51.3999 LS8.1999 65.8 m80.6999 65.8 LS8.1999 15.3999 m80.6999 15.3999 LS8.1999 29.8 m80.6999 29.8 LS8.1999 44.1999 m80.6999 44.1999 LS8.1999 58.6 m80.6999 58.6 LS8.1999 73.0001 m80.6999 73.0001 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Konfetti)(Konfetti) 4.85 3.617 76.85 75.617 [%AI3_Tile(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR4.85 3.617 m4.85 75.617 L76.85 75.617 L76.85 3.617 L4.85 3.617 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 g 0 G) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR10.6 64.867 m7.85 62.867 lS9.1 8.617 m6.85 6.867 lS78.1 68.617 m74.85 67.867 lS76.85 56.867 m74.35 55.117 lS79.6 51.617 m76.6 51.617 lS76.35 44.117 m73.6 45.867 lS78.6 35.867 m76.6 34.367 lS76.1 23.867 m73.35 26.117 lS78.1 12.867 m73.85 13.617 lS68.35 14.617 m66.1 12.867 lS76.6 30.617 m73.6 30.617 lS62.85 58.117 m60.956 60.941 lS32.85 59.617 m31.196 62.181 lS47.891 64.061 m49.744 66.742 lS72.814 2.769 m73.928 5.729 lS67.976 2.633 m67.35 5.909 lS61.85 27.617 m59.956 30.441 lS53.504 56.053 m51.85 58.617 lS52.762 1.779 m52.876 4.776 lS45.391 5.311 m47.244 7.992 lS37.062 3.375 m35.639 5.43 lS55.165 34.828 m57.518 37.491 lS20.795 3.242 m22.12 5.193 lS14.097 4.747 m15.008 8.965 lS9.736 1.91 m8.073 4.225 lS31.891 5.573 m32.005 8.571 lS12.1 70.367 m15.6 68.867 lS9.35 54.867 m9.6 58.117 lS12.85 31.867 m14.35 28.117 lS10.1 37.367 m12.35 41.117 lS34.1 71.117 m31.85 68.617 lS38.35 71.117 m41.6 68.367 lS55.1 71.117 m58.35 69.117 lS57.35 65.117 m55.35 61.867 lS64.35 66.367 m69.35 68.617 lS71.85 62.867 m69.35 61.117 lS23.6 70.867 m23.6 67.867 lS20.6 65.867 m17.35 65.367 lS24.85 61.367 m25.35 58.117 lS25.85 65.867 m29.35 66.617 lS14.1 54.117 m16.85 56.117 lS12.35 11.617 m12.6 15.617 lS12.1 19.867 m14.35 22.367 lS26.1 9.867 m23.6 13.367 lS34.6 47.117 m32.1 45.367 lS62.6 41.867 m59.85 43.367 lS31.6 35.617 m27.85 36.367 lS36.35 26.117 m34.35 24.617 lS33.85 14.117 m31.1 16.367 lS37.1 9.867 m35.1 11.117 lS34.35 20.867 m31.35 20.867 lS44.6 56.617 m42.1 54.867 lS47.35 51.367 m44.35 51.367 lS44.1 43.867 m41.35 45.617 lS43.35 33.117 m42.6 30.617 lS43.85 23.617 m41.1 25.867 lS44.35 15.617 m42.35 16.867 lS67.823 31.1 m64.823 31.1 lS27.1 32.617 m29.6 30.867 lS31.85 55.117 m34.85 55.117 lS19.6 40.867 m22.1 39.117 lS16.85 35.617 m19.85 35.617 lS20.1 28.117 m22.85 29.867 lS52.1 42.617 m54.484 44.178 lS52.437 50.146 m54.821 48.325 lS59.572 54.133 m59.35 51.117 lS50.185 10.055 m53.234 9.928 lS51.187 15.896 m53.571 14.075 lS58.322 19.883 m59.445 16.823 lS53.1 32.117 m50.6 30.367 lS52.85 24.617 m49.6 25.617 lS61.85 9.117 m59.1 10.867 lS69.35 34.617 m66.6 36.367 lS67.1 23.617 m65.1 22.117 lS24.435 46.055 m27.484 45.928 lS25.437 51.896 m27.821 50.075 lS62.6 47.117 m65.321 46.575 lS19.85 19.867 m20.35 16.617 lS21.85 21.867 m25.35 22.617 lS37.6 62.867 m41.6 62.117 lS38.323 42.1 m38.823 38.6 lS69.35 52.617 m66.85 53.867 lS14.85 62.117 m18.1 59.367 lS9.6 46.117 m7.1 44.367 lS20.6 51.617 m18.6 50.117 lS46.141 70.811 m47.994 73.492 lS69.391 40.561 m71.244 43.242 lS38.641 49.311 m39.35 52.117 lS25.141 16.811 m25.85 19.617 lS36.6 32.867 m34.6 31.367 lS6.1 68.617 m2.85 67.867 lS4.85 56.867 m2.35 55.117 lS7.6 51.617 m4.6 51.617 lS6.6 35.867 m4.6 34.367 lS6.1 12.867 m1.85 13.617 lS4.6 30.617 m1.6 30.617 lS72.814 74.769 m73.928 77.729 lS67.976 74.633 m67.35 77.909 lS52.762 73.779 m52.876 76.776 lS37.062 75.375 m35.639 77.43 lS20.795 75.242 m22.12 77.193 lS9.736 73.91 m8.073 76.225 lS10.1 23.617 m6.35 24.367 lS73.217 18.276 m71.323 21.1 lS28.823 39.6 m29.505 42.389 lS49.6 38.617 m47.6 37.117 lS60.323 73.6 m62.323 76.6 lS60.323 1.6 m62.323 4.6 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Kreise)(Kreise) 4.365 3.849 51.13 57.85 [%AI3_Tile(0 O 0 R 0.011765 0.101961 0.576471 0 k 0.011765 0.101961 0.576471 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR4.365 3.849 m4.365 57.85 L51.13 57.85 L51.13 3.849 L4.365 3.849 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.278431 0.796078 1 0.254902 k 0.278431 0.796078 1 0.254902 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR45.429 36.274 m45.843 36.991 45.598 37.908 44.88 38.323 c44.163 38.737 43.245 38.491 42.831 37.774 c42.417 37.056 42.663 36.139 43.38 35.725 c44.098 35.31 45.015 35.556 45.429 36.274 cs44.179 27.926 m43.765 28.643 42.848 28.889 42.13 28.475 c41.413 28.06 41.167 27.143 41.581 26.425 c41.995 25.708 42.913 25.462 43.63 25.876 c44.348 26.291 44.593 27.208 44.179 27.926 cs35.929 41.024 m35.515 41.741 34.598 41.987 33.88 41.573 c33.163 41.158 32.917 40.241 33.331 39.524 c33.745 38.806 34.663 38.56 35.38 38.975 c36.098 39.389 36.343 40.306 35.929 41.024 cs28.38 34.225 m28.794 34.942 28.549 35.859 27.831 36.274 c27.114 36.688 26.196 36.442 25.782 35.725 c25.368 35.007 25.614 34.09 26.331 33.675 c27.049 33.261 27.966 33.507 28.38 34.225 cs31.179 28.024 m30.765 28.741 29.848 28.987 29.13 28.573 c28.413 28.158 28.167 27.241 28.581 26.524 c28.995 25.806 29.913 25.56 30.63 25.975 c31.348 26.389 31.593 27.306 31.179 28.024 cs36.792 23.349 m35.963 23.349 35.292 22.678 35.292 21.849 c35.292 21.021 35.963 20.349 36.792 20.349 c37.62 20.349 38.292 21.021 38.292 21.849 c38.292 22.678 37.62 23.349 36.792 23.349 cs10.888 34.175 m10.474 34.893 10.72 35.81 11.437 36.225 c12.155 36.639 13.072 36.393 13.486 35.675 c13.901 34.958 13.655 34.041 12.937 33.626 c12.22 33.212 11.303 33.458 10.888 34.175 cs11.517 26.601 m11.931 27.318 12.848 27.564 13.566 27.15 c14.283 26.735 14.529 25.818 14.115 25.1 c13.701 24.383 12.783 24.137 12.066 24.551 c11.348 24.966 11.103 25.883 11.517 26.601 cs16.782 41.426 m17.196 42.143 18.114 42.389 18.831 41.975 c19.549 41.56 19.794 40.643 19.38 39.926 c18.966 39.208 18.049 38.962 17.331 39.377 c16.614 39.791 16.368 40.708 16.782 41.426 cs22.365 24.35 m23.194 24.35 23.865 23.678 23.865 22.85 c23.865 22.021 23.194 21.35 22.365 21.35 c21.537 21.35 20.865 22.021 20.865 22.85 c20.865 23.678 21.537 24.35 22.365 24.35 cs45.385 7.849 m44.971 7.132 44.053 6.886 43.336 7.3 c42.619 7.714 42.373 8.632 42.787 9.349 c43.201 10.067 44.119 10.312 44.836 9.898 c45.553 9.484 45.799 8.567 45.385 7.849 cs29.679 7.774 m29.265 7.056 28.348 6.81 27.63 7.225 c26.913 7.639 26.667 8.556 27.081 9.274 c27.495 9.991 28.413 10.237 29.13 9.823 c29.848 9.408 30.093 8.491 29.679 7.774 cs35.542 11.349 m34.713 11.349 34.042 12.021 34.042 12.849 c34.042 13.678 34.713 14.349 35.542 14.349 c36.37 14.349 37.042 13.678 37.042 12.849 c37.042 12.021 36.37 11.349 35.542 11.349 cs10.13 7.475 m10.544 6.757 11.462 6.511 12.179 6.926 c12.897 7.34 13.142 8.257 12.728 8.975 c12.314 9.692 11.397 9.938 10.679 9.524 c9.962 9.109 9.716 8.192 10.13 7.475 cs20.203 13.349 m21.031 13.349 21.703 14.021 21.703 14.849 c21.703 15.678 21.031 16.349 20.203 16.349 c19.375 16.349 18.703 15.678 18.703 14.849 c18.703 14.021 19.375 13.349 20.203 13.349 cs44.635 54.1 m45.049 53.382 44.803 52.465 44.086 52.051 c43.369 51.636 42.451 51.882 42.037 52.6 c41.623 53.317 41.869 54.234 42.586 54.649 c43.303 55.063 44.221 54.817 44.635 54.1 cs36.841 48.1 m36.427 47.382 35.509 47.136 34.792 47.551 c34.074 47.965 33.828 48.882 34.243 49.6 c34.657 50.317 35.574 50.563 36.292 50.149 c37.009 49.734 37.255 48.817 36.841 48.1 cs29.728 54.725 m30.143 54.007 29.897 53.09 29.179 52.675 c28.462 52.261 27.544 52.507 27.13 53.225 c26.716 53.942 26.962 54.859 27.679 55.274 c28.397 55.688 29.314 55.442 29.728 54.725 cs10.86 54.1 m10.446 53.382 10.691 52.465 11.409 52.051 c12.126 51.636 13.044 51.882 13.458 52.6 c13.872 53.317 13.626 54.234 12.909 54.649 c12.191 55.063 11.274 54.817 10.86 54.1 cs19.154 49.1 m19.568 48.382 20.486 48.136 21.203 48.551 c21.92 48.965 22.166 49.882 21.752 50.6 c21.338 51.317 20.42 51.563 19.703 51.149 c18.986 50.734 18.74 49.817 19.154 49.1 cs51.88 38.85 m51.052 38.85 50.38 39.521 50.38 40.35 c50.38 41.178 51.052 41.85 51.88 41.85 c52.709 41.85 53.38 41.178 53.38 40.35 c53.38 39.521 52.709 38.85 51.88 38.85 cs51.865 11.349 m52.693 11.349 53.365 12.021 53.365 12.849 c53.365 13.678 52.693 14.349 51.865 14.349 c51.036 14.349 50.365 13.678 50.365 12.849 c50.365 12.021 51.036 11.349 51.865 11.349 cs30.179 18.524 m29.765 19.241 28.848 19.487 28.13 19.073 c27.413 18.658 27.167 17.741 27.581 17.024 c27.995 16.306 28.913 16.06 29.63 16.475 c30.348 16.889 30.593 17.806 30.179 18.524 cs21.679 31.524 m21.265 32.241 20.348 32.487 19.63 32.073 c18.913 31.658 18.667 30.741 19.081 30.024 c19.495 29.306 20.413 29.06 21.13 29.475 c21.848 29.889 22.093 30.806 21.679 31.524 cs37.914 33.399 m37.5 34.116 36.583 34.362 35.865 33.948 c35.148 33.533 34.902 32.616 35.316 31.899 c35.73 31.181 36.648 30.935 37.365 31.35 c38.083 31.764 38.328 32.681 37.914 33.399 cs28.929 45.024 m28.515 45.741 27.598 45.987 26.88 45.573 c26.163 45.158 25.917 44.241 26.331 43.524 c26.745 42.806 27.663 42.56 28.38 42.975 c29.098 43.389 29.343 44.306 28.929 45.024 cs12.429 45.524 m12.015 46.241 11.098 46.487 10.38 46.073 c9.663 45.658 9.417 44.741 9.831 44.024 c10.245 43.306 11.163 43.06 11.88 43.475 c12.598 43.889 12.843 44.806 12.429 45.524 cs44.49 45.6 m44.075 46.317 43.158 46.563 42.441 46.149 c41.723 45.734 41.477 44.817 41.891 44.1 c42.306 43.382 43.223 43.136 43.941 43.55 c44.658 43.965 44.904 44.882 44.49 45.6 cs12.679 18.524 m12.265 19.241 11.348 19.487 10.63 19.073 c9.913 18.658 9.667 17.741 10.081 17.024 c10.495 16.306 11.413 16.06 12.13 16.475 c12.848 16.889 13.093 17.806 12.679 18.524 cs21.179 5.774 m20.765 6.491 19.848 6.737 19.13 6.323 c18.413 5.908 18.167 4.991 18.581 4.274 c18.995 3.557 19.913 3.311 20.63 3.725 c21.348 4.139 21.593 5.056 21.179 5.774 cs38.929 5.274 m38.515 5.991 37.598 6.237 36.88 5.823 c36.163 5.408 35.917 4.491 36.331 3.774 c36.745 3.057 37.663 2.811 38.38 3.225 c39.098 3.639 39.343 4.556 38.929 5.274 cs43.865 18.1 m44.694 18.1 45.365 17.429 45.365 16.6 c45.365 15.772 44.694 15.1 43.865 15.1 c43.037 15.1 42.365 15.772 42.365 16.6 c42.365 17.429 43.037 18.1 43.865 18.1 cs51.13 4.6 m50.302 4.6 49.63 3.928 49.63 3.1 c49.63 2.272 50.302 1.6 51.13 1.6 c51.959 1.6 52.63 2.272 52.63 3.1 c52.63 3.928 51.959 4.6 51.13 4.6 cs52.163 31.649 m51.748 32.366 50.831 32.612 50.114 32.198 c49.396 31.783 49.15 30.866 49.565 30.149 c49.979 29.431 50.896 29.185 51.614 29.6 c52.331 30.014 52.577 30.931 52.163 31.649 cs51.85 51.35 m51.021 51.35 50.35 50.678 50.35 49.85 c50.35 49.021 51.021 48.35 51.85 48.35 c52.678 48.35 53.35 49.021 53.35 49.85 c53.35 50.678 52.678 51.35 51.85 51.35 cs49.85 23.1 m50.679 23.1 51.35 22.428 51.35 21.6 c51.35 20.771 50.679 20.1 49.85 20.1 c49.022 20.1 48.35 20.771 48.35 21.6 c48.35 22.428 49.022 23.1 49.85 23.1 cs5.13 38.85 m4.302 38.85 3.63 39.521 3.63 40.35 c3.63 41.178 4.302 41.85 5.13 41.85 c5.959 41.85 6.63 41.178 6.63 40.35 c6.63 39.521 5.959 38.85 5.13 38.85 cs5.115 11.349 m5.943 11.349 6.615 12.021 6.615 12.849 c6.615 13.678 5.943 14.349 5.115 14.349 c4.286 14.349 3.615 13.678 3.615 12.849 c3.615 12.021 4.286 11.349 5.115 11.349 cs4.38 4.6 m3.552 4.6 2.88 3.928 2.88 3.1 c2.88 2.272 3.552 1.6 4.38 1.6 c5.209 1.6 5.88 2.272 5.88 3.1 c5.88 3.928 5.209 4.6 4.38 4.6 cs5.413 31.649 m4.998 32.366 4.081 32.612 3.364 32.198 c2.646 31.783 2.4 30.866 2.815 30.149 c3.229 29.431 4.146 29.185 4.864 29.6 c5.581 30.014 5.827 30.931 5.413 31.649 cs5.1 51.35 m4.271 51.35 3.6 50.678 3.6 49.85 c3.6 49.021 4.271 48.35 5.1 48.35 c5.928 48.35 6.6 49.021 6.6 49.85 c6.6 50.678 5.928 51.35 5.1 51.35 cs3.1 23.1 m3.929 23.1 4.6 22.428 4.6 21.6 c4.6 20.771 3.929 20.1 3.1 20.1 c2.272 20.1 1.6 20.771 1.6 21.6 c1.6 22.428 2.272 23.1 3.1 23.1 cs21.194 59.775 m20.78 60.492 19.863 60.738 19.145 60.324 c18.428 59.909 18.182 58.992 18.596 58.275 c19.01 57.558 19.928 57.312 20.645 57.726 c21.363 58.14 21.608 59.057 21.194 59.775 cs38.944 59.275 m38.53 59.992 37.613 60.238 36.895 59.824 c36.178 59.409 35.932 58.492 36.346 57.775 c36.76 57.058 37.678 56.812 38.395 57.226 c39.113 57.64 39.358 58.557 38.944 59.275 cs51.145 58.601 m50.317 58.601 49.645 57.929 49.645 57.101 c49.645 56.273 50.317 55.601 51.145 55.601 c51.974 55.601 52.645 56.273 52.645 57.101 c52.645 57.929 51.974 58.601 51.145 58.601 cs4.395 58.601 m3.567 58.601 2.895 57.929 2.895 57.101 c2.895 56.273 3.567 55.601 4.395 55.601 c5.224 55.601 5.895 56.273 5.895 57.101 c5.895 57.929 5.224 58.601 4.395 58.601 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Lorbeer.Au\647en)(Lorbeer.Au\647en) 1 1.3751 28.5393 28.9143 [%AI3_Tile(0 O 0 R 0.062745 0.705882 1 0.003922 k 0.062745 0.705882 1 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR14.2395 10.6375 m14.2395 1 L15.3645 1 L15.3645 10.6375 L14.2395 10.6375 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.227451 0.741176 1 0.129412 k 0.227451 0.741176 1 0.129412 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR10.5769 15.124 m11.6906 16.8438 15.1198 18.5429 19.503 18.5429 c23.8844 18.5429 27.3874 16.8935 28.428 15.1262 C28.428 15.1259 L27.3874 13.3995 23.8844 11.7023 19.503 11.7023 c15.1249 11.7023 11.676 13.4382 10.5769 15.124 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Lorbeer.Innen)(Lorbeer.Innen) 1 1 28.5392 28.5392 [%AI3_Tile(0 O 0 R 0.062745 0.705882 1 0.003922 k 0.062745 0.705882 1 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR19.2768 15.3585 m28.9144 15.3585 L28.9144 14.2335 L19.2768 14.2335 L19.2768 15.3585 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.227451 0.741176 1 0.129412 k 0.227451 0.741176 1 0.129412 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR14.7461 18.9624 m13.0264 17.8486 11.3273 14.4193 11.3273 10.0362 c11.3273 5.6547 12.9768 2.1518 14.744 1.1112 C14.7443 1.1112 L16.4707 2.1518 18.1679 5.6547 18.1679 10.0362 c18.1679 14.4143 16.432 17.8633 14.7461 18.9624 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Lorbeer.Kante)(Lorbeer.Kante) 1.3972 1 28.9364 28.5392 [%AI3_Tile(0 O 0 R 0.062745 0.705882 1 0.003922 k 0.062745 0.705882 1 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR29.1571 15.2998 m1 15.2998 L1 14.1748 L29.1571 14.1748 L29.1571 15.2998 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.227451 0.741176 1 0.129412 k 0.227451 0.741176 1 0.129412 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR2.0183 27.4787 m1.5899 25.4751 2.8132 21.8488 5.9125 18.7494 c9.0107 15.6513 12.654 14.3407 14.6395 14.8545 C14.6398 14.8547 L15.1246 16.8113 13.8478 20.4883 10.7496 23.5865 c7.6538 26.6824 3.9876 27.8936 2.0183 27.4787 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.113725 0.537255 0.85098 0.003922 k 0.113725 0.537255 0.85098 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR2.0183 2.0091 m1.5899 4.0126 2.8132 7.6389 5.9125 10.7382 c9.0107 13.8365 12.654 15.147 14.6395 14.6332 C14.6398 14.633 L15.1246 12.6765 13.8478 8.9993 10.7496 5.9011 c7.6538 2.8054 3.9876 1.5941 2.0183 2.0091 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.227451 0.741176 1 0.129412 k 0.227451 0.741176 1 0.129412 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR15.821 2.0091 m15.3925 4.0126 16.6159 7.6389 19.7152 10.7382 c22.8134 13.8365 26.4567 15.147 28.4422 14.6332 C28.4424 14.633 L28.9273 12.6765 27.6505 8.9993 24.5523 5.9011 c21.4565 2.8054 17.7903 1.5941 15.821 2.0091 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.113725 0.537255 0.85098 0.003922 k 0.113725 0.537255 0.85098 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR15.821 27.4787 m15.3925 25.4751 16.6159 21.8488 19.7152 18.7494 c22.8134 15.6513 26.4567 14.3407 28.4422 14.8545 C28.4424 14.8547 L28.9273 16.8113 27.6505 20.4883 24.5523 23.5865 c21.4565 26.6824 17.7903 27.8936 15.821 27.4787 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pfeil 1.2.Kante)(Pfeil 1.2.Kante) 1 1 39.404 39.4039 [%AI3_Tile(0 O 0 R 0.811765 0.913725 0.270588 0.219608 k 0.811765 0.913725 0.270588 0.219608 K) @(%AI6_BeginPatternLayer1 J 0 j 1 w 4 M []0 d0 XR20.202 20.202 m39.404 20.202 lS33.904 15.6187 m39.4248 20.202 L39.4248 20.202 L33.887 24.6252 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pfeil 1.2.au\647en/innen)(Pfeil 1.2.au\647en/innen) 1 1 39.4039 39.4039 [%AI3_Tile(0 O 0 R 0.811765 0.913725 0.270588 0.219608 k 0.811765 0.913725 0.270588 0.219608 K) @(%AI6_BeginPatternLayer1 J 0 j 1 w 4 M []0 d0 XR33.9039 15.6187 m39.4247 20.202 L39.4247 20.202 L33.8869 24.6252 LS39.2997 20.202 m24.5706 20.202 l20.4039 20.4792 20.4039 16.8125 v20.4039 13.1458 20.4039 12.5625 yS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Punkte)(Punkte) 1 1 29.8 29.8 [%AI3_Tile(0 O 0 R 0.556863 0.972549 0 0 k 0.556863 0.972549 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR1 1 m1 29.8 L29.8 29.8 L29.8 1 L1 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.101961 0.254902 0 0 k 0.101961 0.254902 0 0 K) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR11.08 8.2 m11.08 9.791 9.79 11.08 8.2 11.08 c6.609 11.08 5.32 9.791 5.32 8.2 c5.32 6.61 6.609 5.32 8.2 5.32 c9.79 5.32 11.08 6.61 11.08 8.2 cf11.08 22.6 m11.08 24.191 9.79 25.48 8.2 25.48 c6.609 25.48 5.32 24.191 5.32 22.6 c5.32 21.01 6.609 19.72 8.2 19.72 c9.79 19.72 11.08 21.01 11.08 22.6 cf18.28 15.4 m18.28 16.991 16.99 18.28 15.4 18.28 c13.809 18.28 12.52 16.991 12.52 15.4 c12.52 13.81 13.809 12.52 15.4 12.52 c16.99 12.52 18.28 13.81 18.28 15.4 cf25.48 8.2 m25.48 9.791 24.19 11.08 22.6 11.08 c21.009 11.08 19.72 9.791 19.72 8.2 c19.72 6.61 21.009 5.32 22.6 5.32 c24.19 5.32 25.48 6.61 25.48 8.2 cf25.48 22.6 m25.48 24.191 24.19 25.48 22.6 25.48 c21.009 25.48 19.72 24.191 19.72 22.6 c19.72 21.01 21.009 19.72 22.6 19.72 c24.19 19.72 25.48 21.01 25.48 22.6 cf*U26.92 1 m29.8 1 L29.8 3.88 L28.209 3.88 26.92 2.591 26.92 1 Cf15.4 3.88 m13.809 3.88 12.52 2.591 12.52 1 C18.28 1 L18.28 2.591 16.99 3.88 15.4 3.88 cf1 3.88 m1 1 L3.88 1 L3.88 2.591 2.59 3.88 1 3.88 Cf26.92 15.4 m26.92 13.81 28.209 12.52 29.8 12.52 C29.8 18.28 L28.209 18.28 26.92 16.991 26.92 15.4 cf15.4 18.28 m13.809 18.28 12.52 16.991 12.52 15.4 c12.52 13.81 13.809 12.52 15.4 12.52 c16.99 12.52 18.28 13.81 18.28 15.4 c18.28 16.991 16.99 18.28 15.4 18.28 cf3.88 15.4 m3.88 16.991 2.59 18.28 1 18.28 C1 12.52 L2.59 12.52 3.88 13.81 3.88 15.4 cf29.8 26.92 m29.8 29.8 L26.92 29.8 L26.92 28.21 28.209 26.92 29.8 26.92 Cf15.4 26.92 m16.99 26.92 18.28 28.21 18.28 29.8 C12.52 29.8 L12.52 28.21 13.809 26.92 15.4 26.92 cf3.88 29.8 m1 29.8 L1 26.92 L2.59 26.92 3.88 28.21 3.88 29.8 Cf8.2 11.08 m6.609 11.08 5.32 9.791 5.32 8.2 c5.32 6.61 6.609 5.32 8.2 5.32 c9.79 5.32 11.08 6.61 11.08 8.2 c11.08 9.791 9.79 11.08 8.2 11.08 cf22.6 11.08 m21.009 11.08 19.72 9.791 19.72 8.2 c19.72 6.61 21.009 5.32 22.6 5.32 c24.19 5.32 25.48 6.61 25.48 8.2 c25.48 9.791 24.19 11.08 22.6 11.08 cf8.2 25.48 m6.609 25.48 5.32 24.191 5.32 22.6 c5.32 21.01 6.609 19.72 8.2 19.72 c9.79 19.72 11.08 21.01 11.08 22.6 c11.08 24.191 9.79 25.48 8.2 25.48 cf22.6 25.48 m21.009 25.48 19.72 24.191 19.72 22.6 c19.72 21.01 21.009 19.72 22.6 19.72 c24.19 19.72 25.48 21.01 25.48 22.6 c25.48 24.191 24.19 25.48 22.6 25.48 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Punkte 1)(Punkte 1) 1 1 29.8 29.8 [%AI3_Tile(0 O 0 R 0.556863 0.972549 0 0 k 0.556863 0.972549 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR1 1 m1 29.8 L29.8 29.8 L29.8 1 L1 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.101961 0.254902 0 0 k 0.101961 0.254902 0 0 K) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR11.08 8.2 m11.08 9.791 9.79 11.08 8.2 11.08 c6.609 11.08 5.32 9.791 5.32 8.2 c5.32 6.61 6.609 5.32 8.2 5.32 c9.79 5.32 11.08 6.61 11.08 8.2 cf11.08 22.6 m11.08 24.191 9.79 25.48 8.2 25.48 c6.609 25.48 5.32 24.191 5.32 22.6 c5.32 21.01 6.609 19.72 8.2 19.72 c9.79 19.72 11.08 21.01 11.08 22.6 cf18.28 15.4 m18.28 16.991 16.99 18.28 15.4 18.28 c13.809 18.28 12.52 16.991 12.52 15.4 c12.52 13.81 13.809 12.52 15.4 12.52 c16.99 12.52 18.28 13.81 18.28 15.4 cf25.48 8.2 m25.48 9.791 24.19 11.08 22.6 11.08 c21.009 11.08 19.72 9.791 19.72 8.2 c19.72 6.61 21.009 5.32 22.6 5.32 c24.19 5.32 25.48 6.61 25.48 8.2 cf25.48 22.6 m25.48 24.191 24.19 25.48 22.6 25.48 c21.009 25.48 19.72 24.191 19.72 22.6 c19.72 21.01 21.009 19.72 22.6 19.72 c24.19 19.72 25.48 21.01 25.48 22.6 cf*U26.92 1 m29.8 1 L29.8 3.88 L28.209 3.88 26.92 2.591 26.92 1 Cf15.4 3.88 m13.809 3.88 12.52 2.591 12.52 1 C18.28 1 L18.28 2.591 16.99 3.88 15.4 3.88 cf1 3.88 m1 1 L3.88 1 L3.88 2.591 2.59 3.88 1 3.88 Cf26.92 15.4 m26.92 13.81 28.209 12.52 29.8 12.52 C29.8 18.28 L28.209 18.28 26.92 16.991 26.92 15.4 cf15.4 18.28 m13.809 18.28 12.52 16.991 12.52 15.4 c12.52 13.81 13.809 12.52 15.4 12.52 c16.99 12.52 18.28 13.81 18.28 15.4 c18.28 16.991 16.99 18.28 15.4 18.28 cf3.88 15.4 m3.88 16.991 2.59 18.28 1 18.28 C1 12.52 L2.59 12.52 3.88 13.81 3.88 15.4 cf29.8 26.92 m29.8 29.8 L26.92 29.8 L26.92 28.21 28.209 26.92 29.8 26.92 Cf15.4 26.92 m16.99 26.92 18.28 28.21 18.28 29.8 C12.52 29.8 L12.52 28.21 13.809 26.92 15.4 26.92 cf3.88 29.8 m1 29.8 L1 26.92 L2.59 26.92 3.88 28.21 3.88 29.8 Cf8.2 11.08 m6.609 11.08 5.32 9.791 5.32 8.2 c5.32 6.61 6.609 5.32 8.2 5.32 c9.79 5.32 11.08 6.61 11.08 8.2 c11.08 9.791 9.79 11.08 8.2 11.08 cf22.6 11.08 m21.009 11.08 19.72 9.791 19.72 8.2 c19.72 6.61 21.009 5.32 22.6 5.32 c24.19 5.32 25.48 6.61 25.48 8.2 c25.48 9.791 24.19 11.08 22.6 11.08 cf8.2 25.48 m6.609 25.48 5.32 24.191 5.32 22.6 c5.32 21.01 6.609 19.72 8.2 19.72 c9.79 19.72 11.08 21.01 11.08 22.6 c11.08 24.191 9.79 25.48 8.2 25.48 cf22.6 25.48 m21.009 25.48 19.72 24.191 19.72 22.6 c19.72 21.01 21.009 19.72 22.6 19.72 c24.19 19.72 25.48 21.01 25.48 22.6 c25.48 24.191 24.19 25.48 22.6 25.48 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Rauten)(Rauten) 1 1 37.1865 41.9411 [%AI3_Tile(0 O 0 R 0.301961 0 0.92549 0 k 0.301961 0 0.92549 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR1.0002 1.0004 m1.0002 41.9411 L37.1865 41.9411 L37.1865 1.0004 L1.0002 1.0004 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 g 0 G) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.0936 41.9408 m19.0929 41.9408 L19.0933 41.9402 L19.0936 41.9408 Lf7.0311 41.9408 m7.0304 41.9408 L7.0308 41.9402 L7.0311 41.9408 Lf31.1556 41.9408 m31.1548 41.9408 L31.1552 41.9402 L31.1556 41.9408 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.854902 1 0.039216 0.011765 k 0.854902 1 0.039216 0.011765 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR37.1865 1 m37.1865 11.2349 L31.1552 1 L37.1865 1 Lf19.0933 1 m31.1552 1 L25.124 11.2349 L19.0933 1 Lf7.0308 1 m19.0933 1 L13.062 11.2349 L7.0308 1 Lf1 1 m7.0308 1 L1 11.2349 L1 1 Lf37.1859 11.2349 m37.1865 11.236 L37.1865 31.7059 L31.1552 21.4704 L37.1859 11.2349 Lf19.0933 21.4704 m25.124 11.2349 L31.1552 21.4704 L25.124 31.7059 L19.0933 21.4704 Lf7.0308 21.4704 m13.062 11.2349 L19.0933 21.4704 L13.062 31.7059 L7.0308 21.4704 Lf1 31.7059 m1 11.2349 L7.0308 21.4704 L1 31.7059 Lf37.1859 31.7059 m37.1865 31.707 L37.1865 41.9408 L31.1556 41.9408 L31.1552 41.9402 L37.1859 31.7059 Lf25.124 31.7059 m31.1552 41.9402 L31.1548 41.9408 L19.0936 41.9408 L19.0933 41.9402 L25.124 31.7059 Lf13.062 31.7059 m19.0933 41.9402 L19.0929 41.9408 L7.0311 41.9408 L7.0308 41.9402 L13.062 31.7059 Lf7.0304 41.9408 m1 41.9408 L1 31.7059 L7.0308 41.9402 L7.0304 41.9408 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Rauten 1)(Rauten 1) 1 1 37.1865 41.9411 [%AI3_Tile(0 O 0 R 0.301961 0 0.92549 0 k 0.301961 0 0.92549 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR1.0002 1.0004 m1.0002 41.9411 L37.1865 41.9411 L37.1865 1.0004 L1.0002 1.0004 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 g 0 G) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.0936 41.9408 m19.0929 41.9408 L19.0933 41.9402 L19.0936 41.9408 Lf7.0311 41.9408 m7.0304 41.9408 L7.0308 41.9402 L7.0311 41.9408 Lf31.1556 41.9408 m31.1548 41.9408 L31.1552 41.9402 L31.1556 41.9408 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.854902 1 0.039216 0.011765 k 0.854902 1 0.039216 0.011765 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR37.1865 1 m37.1865 11.2349 L31.1552 1 L37.1865 1 Lf19.0933 1 m31.1552 1 L25.124 11.2349 L19.0933 1 Lf7.0308 1 m19.0933 1 L13.062 11.2349 L7.0308 1 Lf1 1 m7.0308 1 L1 11.2349 L1 1 Lf37.1859 11.2349 m37.1865 11.236 L37.1865 31.7059 L31.1552 21.4704 L37.1859 11.2349 Lf19.0933 21.4704 m25.124 11.2349 L31.1552 21.4704 L25.124 31.7059 L19.0933 21.4704 Lf7.0308 21.4704 m13.062 11.2349 L19.0933 21.4704 L13.062 31.7059 L7.0308 21.4704 Lf1 31.7059 m1 11.2349 L7.0308 21.4704 L1 31.7059 Lf37.1859 31.7059 m37.1865 31.707 L37.1865 41.9408 L31.1556 41.9408 L31.1552 41.9402 L37.1859 31.7059 Lf25.124 31.7059 m31.1552 41.9402 L31.1548 41.9408 L19.0936 41.9408 L19.0933 41.9402 L25.124 31.7059 Lf13.062 31.7059 m19.0933 41.9402 L19.0929 41.9408 L7.0311 41.9408 L7.0308 41.9402 L13.062 31.7059 Lf7.0304 41.9408 m1 41.9408 L1 31.7059 L7.0308 41.9402 L7.0304 41.9408 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Schachbrettmuster)(Schachbrettmuster) 1 1 31.3995 31.3995 [%AI3_Tile(0 O 0 R 0 0.92549 0.937255 0 k 0 0.92549 0.937255 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.9995 4.8 m27.5995 4.8 L27.5995 12.3995 L19.9995 12.3995 L19.9995 4.8 Lf31.3995 27.5995 m31.3995 31.3995 L27.5995 31.3995 L27.5995 27.5995 L31.3995 27.5995 Lf19.9995 27.5995 m19.9995 19.9995 L27.5995 19.9995 L27.5995 27.5995 L19.9995 27.5995 Lf12.3995 12.3995 m19.9995 12.3995 L19.9995 19.9995 L12.3995 19.9995 L12.3995 12.3995 Lf12.3995 27.5995 m4.8 27.5995 L4.8 19.9995 L12.3995 19.9995 L12.3995 27.5995 Lf4.8 12.3995 m4.8 4.8 L12.3995 4.8 L12.3995 12.3995 L4.8 12.3995 Lf19.9995 27.5995 m19.9995 31.3995 L12.3995 31.3995 L12.3995 27.5995 L19.9995 27.5995 Lf12.3995 4.8 m12.3995 1 L19.9995 1 L19.9995 4.8 L12.3995 4.8 Lf4.8 19.9995 m1 19.9995 L1 12.3995 L4.8 12.3995 L4.8 19.9995 Lf27.5995 19.9995 m27.5995 12.3995 L31.3995 12.3995 L31.3995 19.9995 L27.5995 19.9995 Lf4.8 31.3995 m1 31.3995 L1 27.5995 L4.8 27.5995 L4.8 31.3995 Lf27.5995 1 m31.3995 1 L31.3995 4.8 L27.5995 4.8 L27.5995 1 Lf1 4.8 m1 1 L4.8 1 L4.8 4.8 L1 4.8 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0.043137 0.278431 0 k 0 0.043137 0.278431 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR4.8 4.8 m4.8 1 L12.3995 1 L12.3995 4.8 L4.8 4.8 Lf4.8 12.3995 m1 12.3995 L1 4.8 L4.8 4.8 L4.8 12.3995 Lf19.9995 4.8 m19.9995 1 L27.5995 1 L27.5995 4.8 L19.9995 4.8 Lf12.3995 12.3995 m12.3995 4.8 L19.9995 4.8 L19.9995 12.3995 L12.3995 12.3995 Lf27.5995 4.8 m31.3995 4.8 L31.3995 12.3995 L27.5995 12.3995 L27.5995 4.8 Lf12.3995 19.9995 m4.8 19.9995 L4.8 12.3995 L12.3995 12.3995 L12.3995 19.9995 Lf4.8 27.5995 m1 27.5995 L1 19.9995 L4.8 19.9995 L4.8 27.5995 Lf19.9995 12.3995 m27.5995 12.3995 L27.5995 19.9995 L19.9995 19.9995 L19.9995 12.3995 Lf19.9995 19.9995 m19.9995 27.5995 L12.3995 27.5995 L12.3995 19.9995 L19.9995 19.9995 Lf27.5995 19.9995 m31.3995 19.9995 L31.3995 27.5995 L27.5995 27.5995 L27.5995 19.9995 Lf12.3995 27.5995 m12.3995 31.3995 L4.8 31.3995 L4.8 27.5995 L12.3995 27.5995 Lf27.5995 27.5995 m27.5995 31.3995 L19.9995 31.3995 L19.9995 27.5995 L27.5995 27.5995 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Schachbrettmuster 1)(Schachbrettmuster 1) 1 1 31.3995 31.3995 [%AI3_Tile(0 O 0 R 0 0.92549 0.937255 0 k 0 0.92549 0.937255 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.9995 4.8 m27.5995 4.8 L27.5995 12.3995 L19.9995 12.3995 L19.9995 4.8 Lf31.3995 27.5995 m31.3995 31.3995 L27.5995 31.3995 L27.5995 27.5995 L31.3995 27.5995 Lf19.9995 27.5995 m19.9995 19.9995 L27.5995 19.9995 L27.5995 27.5995 L19.9995 27.5995 Lf12.3995 12.3995 m19.9995 12.3995 L19.9995 19.9995 L12.3995 19.9995 L12.3995 12.3995 Lf12.3995 27.5995 m4.8 27.5995 L4.8 19.9995 L12.3995 19.9995 L12.3995 27.5995 Lf4.8 12.3995 m4.8 4.8 L12.3995 4.8 L12.3995 12.3995 L4.8 12.3995 Lf19.9995 27.5995 m19.9995 31.3995 L12.3995 31.3995 L12.3995 27.5995 L19.9995 27.5995 Lf12.3995 4.8 m12.3995 1 L19.9995 1 L19.9995 4.8 L12.3995 4.8 Lf4.8 19.9995 m1 19.9995 L1 12.3995 L4.8 12.3995 L4.8 19.9995 Lf27.5995 19.9995 m27.5995 12.3995 L31.3995 12.3995 L31.3995 19.9995 L27.5995 19.9995 Lf4.8 31.3995 m1 31.3995 L1 27.5995 L4.8 27.5995 L4.8 31.3995 Lf27.5995 1 m31.3995 1 L31.3995 4.8 L27.5995 4.8 L27.5995 1 Lf1 4.8 m1 1 L4.8 1 L4.8 4.8 L1 4.8 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0.043137 0.278431 0 k 0 0.043137 0.278431 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR4.8 4.8 m4.8 1 L12.3995 1 L12.3995 4.8 L4.8 4.8 Lf4.8 12.3995 m1 12.3995 L1 4.8 L4.8 4.8 L4.8 12.3995 Lf19.9995 4.8 m19.9995 1 L27.5995 1 L27.5995 4.8 L19.9995 4.8 Lf12.3995 12.3995 m12.3995 4.8 L19.9995 4.8 L19.9995 12.3995 L12.3995 12.3995 Lf27.5995 4.8 m31.3995 4.8 L31.3995 12.3995 L27.5995 12.3995 L27.5995 4.8 Lf12.3995 19.9995 m4.8 19.9995 L4.8 12.3995 L12.3995 12.3995 L12.3995 19.9995 Lf4.8 27.5995 m1 27.5995 L1 19.9995 L4.8 19.9995 L4.8 27.5995 Lf19.9995 12.3995 m27.5995 12.3995 L27.5995 19.9995 L19.9995 19.9995 L19.9995 12.3995 Lf19.9995 19.9995 m19.9995 27.5995 L12.3995 27.5995 L12.3995 19.9995 L19.9995 19.9995 Lf27.5995 19.9995 m31.3995 19.9995 L31.3995 27.5995 L27.5995 27.5995 L27.5995 19.9995 Lf12.3995 27.5995 m12.3995 31.3995 L4.8 31.3995 L4.8 27.5995 L12.3995 27.5995 Lf27.5995 27.5995 m27.5995 31.3995 L19.9995 31.3995 L19.9995 27.5995 L27.5995 27.5995 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Schuppen)(Schuppen) 1.6 9.3475 48.088 55.8355 [%AI3_Tile(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1.6 9.3475 m1.6 55.8355 L48.088 55.8355 L48.088 9.3475 L1.6 9.3475 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 g 0 G) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR17.0956 9.3475 m12.8162 9.3475 9.3475 5.8787 9.3475 1.6 C9.3475 5.8787 5.8787 9.3475 1.6 9.3475 C1.6 13.6262 5.0687 17.095 9.3475 17.095 c13.6268 17.095 17.0956 13.6262 17.0956 9.3475 Cs32.5918 9.3475 m28.3125 9.3475 24.8437 5.8787 24.8437 1.6 C24.8437 5.8787 21.3743 9.3475 17.0956 9.3475 C17.0956 13.6262 20.5644 17.095 24.8437 17.095 c29.1224 17.095 32.5918 13.6262 32.5918 9.3475 Cs48.088 9.3475 m43.8087 9.3475 40.3399 5.8787 40.3399 1.6 C40.3399 5.8787 36.8705 9.3475 32.5918 9.3475 C32.5918 13.6262 36.0606 17.095 40.3399 17.095 c44.6186 17.095 48.088 13.6262 48.088 9.3475 Cs17.0956 40.3393 m12.8162 40.3393 9.3475 36.8699 9.3475 32.5912 C9.3475 36.8699 5.8787 40.3393 1.6 40.3393 C1.6 44.6181 5.0687 48.0874 9.3475 48.0874 c13.6268 48.0874 17.0956 44.6181 17.0956 40.3393 Cs17.0956 24.8431 m12.8162 24.8431 9.3475 21.3743 9.3475 17.095 C9.3475 21.3743 5.8787 24.8431 1.6 24.8431 C1.6 29.1218 5.0687 32.5912 9.3475 32.5912 c13.6268 32.5912 17.0956 29.1218 17.0956 24.8431 Cs32.5918 24.8431 m28.3125 24.8431 24.8437 21.3743 24.8437 17.095 C24.8437 21.3743 21.3743 24.8431 17.0956 24.8431 C17.0956 29.1218 20.5644 32.5912 24.8437 32.5912 c29.1224 32.5912 32.5918 29.1218 32.5918 24.8431 Cs48.088 24.8431 m43.8087 24.8431 40.3399 21.3743 40.3399 17.095 C40.3399 21.3743 36.8705 24.8431 32.5918 24.8431 C32.5918 29.1218 36.0606 32.5912 40.3399 32.5912 c44.6186 32.5912 48.088 29.1218 48.088 24.8431 Cs32.5918 40.3393 m28.3125 40.3393 24.8437 36.8699 24.8437 32.5912 C24.8437 36.8699 21.3743 40.3393 17.0956 40.3393 C17.0956 44.6181 20.5644 48.0874 24.8437 48.0874 c29.1224 48.0874 32.5918 44.6181 32.5918 40.3393 Cs48.088 40.3393 m43.8087 40.3393 40.3399 36.8699 40.3399 32.5912 C40.3399 36.8699 36.8705 40.3393 32.5918 40.3393 C32.5918 44.6181 36.0606 48.0874 40.3399 48.0874 c44.6186 48.0874 48.088 44.6181 48.088 40.3393 Cs17.0956 55.8355 m12.8162 55.8355 9.3475 52.3662 9.3475 48.0874 C9.3475 52.3662 5.8787 55.8355 1.6 55.8355 C1.6 60.1143 5.0687 63.5836 9.3475 63.5836 c13.6268 63.5836 17.0956 60.1143 17.0956 55.8355 Cs32.5918 55.8355 m28.3125 55.8355 24.8437 52.3662 24.8437 48.0874 C24.8437 52.3662 21.3743 55.8355 17.0956 55.8355 C17.0956 60.1143 20.5644 63.5836 24.8437 63.5836 c29.1224 63.5836 32.5918 60.1143 32.5918 55.8355 Cs48.088 55.8355 m43.8087 55.8355 40.3399 52.3662 40.3399 48.0874 C40.3399 52.3662 36.8705 55.8355 32.5918 55.8355 C32.5918 60.1143 36.0606 63.5836 40.3399 63.5836 c44.6186 63.5836 48.088 60.1143 48.088 55.8355 Cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Sechseck)(Sechseck) 4 1.6 70.151 77.983 [%AI3_Tile(0 O 0 R 0 0.952941 0.478431 0 k 0 0.952941 0.478431 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR70.151 77.983 m70.151 1.6 L4 1.6 L4 77.983 L70.151 77.983 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.964706 1 0.266667 0.098039 k 0.964706 1 0.266667 0.098039 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR20.538 30.244 mS26.05 20.696 m15.025 20.696 L9.513 30.244 L15.025 39.792 L26.05 39.792 L31.564 30.244 L26.05 20.696 Ls20.537 11.148 mS26.05 1.6 m15.024 1.6 L9.512 11.148 L15.024 20.696 L26.05 20.696 L31.563 11.148 L26.05 1.6 Ls53.614 30.244 mS59.126 20.696 m48.101 20.696 L42.589 30.244 L48.101 39.792 L59.126 39.792 L64.639 30.244 L59.126 20.696 Ls53.614 11.148 mS59.126 1.6 m48.101 1.6 L42.588 11.148 L48.101 20.696 L59.126 20.696 L64.638 11.148 L59.126 1.6 Ls20.538 68.436 mS26.051 58.888 m15.025 58.888 L9.513 68.436 L15.025 77.984 L26.051 77.984 L31.564 68.436 L26.051 58.888 Ls20.538 49.34 mS26.051 39.792 m15.025 39.792 L9.513 49.34 L15.025 58.888 L26.05 58.888 L31.564 49.34 L26.051 39.792 Ls53.614 68.436 mS59.127 58.888 m48.102 58.888 L42.589 68.436 L48.101 77.985 L59.127 77.985 L64.639 68.436 L59.127 58.888 Ls53.614 49.34 mS59.127 39.792 m48.101 39.792 L42.589 49.34 L48.101 58.888 L59.127 58.888 L64.639 49.341 L59.127 39.792 Ls4 20.696 mS3.876 30.244 m9.512 30.244 L15.024 20.696 L9.512 11.147 L3.876 11.147 LS37.075 20.696 mS42.588 11.148 m31.563 11.148 L26.05 20.696 L31.563 30.244 L42.589 30.244 L48.101 20.696 L42.588 11.148 Ls37.076 58.888 mS42.589 49.34 m31.564 49.34 L26.05 58.888 L31.564 68.436 L42.589 68.436 L48.101 58.888 L42.589 49.34 Ls70.151 20.696 mS70.2094 11.147 m64.639 11.147 L59.127 20.696 L64.639 30.244 L70.2094 30.244 LS70.152 58.888 mS70.0427 49.34 m64.639 49.34 L59.127 58.888 L64.639 68.436 L70.0427 68.436 LS4 58.888 mS3.876 68.436 m9.513 68.436 L15.025 58.888 L9.513 49.34 L3.876 49.34 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Seil.Kante)(Seil.Kante) 1 4.6 60.9998 33.3999 [%AI3_Tile(0 O 0 R 0.858823 0.85098 0.788235 1 k 0.858823 0.85098 0.788235 1 K) @(%AI6_BeginPatternLayer1 J 1 j 0.6 w 4 M []0 d0 XR24.9999 7 m15.6521 4.663 8.125 8.6981 1 14.1407 CS36.9999 7 m22.3477 3.337 12.168 15.3276 1 23.859 CS48.9999 7 m29.3464 2.0866 17.7386 25.3332 1 30.6213 CS1 30.9999 m24.9999 36.9999 36.9999 1 60.9998 7 CS13 30.9999 m32.6534 35.9133 44.2611 12.6667 60.9998 7.3786 CS24.9999 30.9999 m39.652 34.6629 49.8317 22.6722 60.9998 14.1407 CS36.9999 30.9999 m46.3476 33.3369 53.8749 29.3018 60.9998 23.859 CS48.9999 30.9999 m53.3464 32.0865 57.2978 31.7908 60.9998 30.6213 CS13 7 m8.6535 5.9134 4.7019 6.2091 1 7.3786 CS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (SolidStar.side)(SolidStar.side) 1 1 33.0117 33.0117 [%AI3_Tile(0 O 0 R 0.070588 0.207843 0.92549 0 k 0.070588 0.207843 0.92549 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR7.9689 26.0458 m14.5331 22.9874 l17.0095 29.7904 L19.4859 22.9874 l26.0473 26.0458 l22.9889 19.4815 l29.792 17.0052 l22.9889 14.5288 l26.0473 7.9674 l19.4859 11.0257 l17.0095 4.2226 l14.5305 11.0257 l7.9689 7.9674 l11.0273 14.5288 l4.2242 17.0052 l11.0273 19.4843 L7.9689 26.0458 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Stern)(Stern) 1 1 63.384 84.766 [%AI3_Tile(0 O 0 R 0.976471 1 0.25098 0.098039 k 0.976471 1 0.25098 0.098039 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR1 1 m1 84.766 L63.384 84.766 L63.384 1 L1 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0.286274 0.929412 0 k 0 0.286274 0.929412 0 K) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR37.668 67.113 m43.924 62.567 L41.535 55.213 L47.791 59.757 L54.046 55.212 L51.657 62.566 L57.914 67.112 L50.18 67.112 L47.791 74.467 L45.402 67.113 L37.668 67.113 Lf16.596 59.757 m22.851 55.212 L20.462 62.566 L26.719 67.112 L18.985 67.112 L16.596 74.467 L14.207 67.113 L6.473 67.113 L12.729 62.567 L10.34 55.213 L16.596 59.757 Lf20.462 20.683 m26.719 25.229 L18.985 25.229 L16.596 32.584 L14.207 25.23 L6.473 25.23 L12.729 20.684 L10.34 13.33 L16.596 17.874 L22.851 13.329 L20.462 20.683 Lf38.447 34.271 m36.058 41.625 L42.315 46.171 L34.581 46.171 L32.192 53.526 L29.803 46.172 L22.069 46.172 L28.325 41.626 L25.936 34.272 L32.192 38.816 L38.447 34.271 Lf51.657 20.683 m57.914 25.229 L50.18 25.229 L47.791 32.584 L45.402 25.23 L37.668 25.23 L43.924 20.684 L41.535 13.33 L47.791 17.874 L54.046 13.329 L51.657 20.683 Lf*U34.581 4.288 m32.192 11.643 L29.803 4.289 L22.069 4.289 L26.5962 1 L37.7885 1 L42.315 4.288 L34.581 4.288 Lf53.261 4.289 m57.7882 1 L63.384 1 L63.384 11.643 L60.995 4.289 L53.261 4.289 Lf4.866 41.625 m11.123 46.171 L3.389 46.171 L1 53.526 L1 38.816 L7.255 34.271 L4.866 41.625 Lf36.058 41.625 m42.315 46.171 L34.581 46.171 L32.192 53.526 L29.803 46.172 L22.069 46.172 L28.325 41.626 L25.936 34.272 L32.192 38.816 L38.447 34.271 L36.058 41.625 Lf53.261 46.172 m59.517 41.626 L57.128 34.272 L63.384 38.816 L63.384 53.526 L60.995 46.172 L53.261 46.172 Lf4.866 83.508 m6.5974 84.766 L1 84.766 L1 80.699 L7.255 76.154 L4.866 83.508 Lf25.936 76.155 m32.192 80.699 L38.447 76.154 L36.058 83.508 L37.7895 84.766 L26.5951 84.766 L28.325 83.509 L25.936 76.155 Lf22.851 55.212 m20.462 62.566 L26.719 67.112 L18.985 67.112 L16.596 74.467 L14.207 67.113 L6.473 67.113 L12.729 62.567 L10.34 55.213 L16.596 59.757 L22.851 55.212 Lf41.535 55.213 m47.791 59.757 L54.046 55.212 L51.657 62.566 L57.914 67.112 L50.18 67.112 L47.791 74.467 L45.402 67.113 L37.668 67.113 L43.924 62.567 L41.535 55.213 Lf50.18 25.229 m47.791 32.584 L45.402 25.23 L37.668 25.23 L43.924 20.684 L41.535 13.33 L47.791 17.874 L54.046 13.329 L51.657 20.683 L57.914 25.229 L50.18 25.229 Lf18.985 25.229 m16.596 32.584 L14.207 25.23 L6.473 25.23 L12.729 20.684 L10.34 13.33 L16.596 17.874 L22.851 13.329 L20.462 20.683 L26.719 25.229 L18.985 25.229 Lf3.388 4.289 m1 11.643 L1 1 L6.5948 1 L11.122 4.289 L3.388 4.289 Lf57.128 76.154 m63.384 80.699 L63.384 84.766 L57.7855 84.766 L59.517 83.508 L57.128 76.154 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Stern 1)(Stern 1) 1 1 63.384 84.766 [%AI3_Tile(0 O 0 R 0.976471 1 0.25098 0.098039 k 0.976471 1 0.25098 0.098039 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR1 1 m1 84.766 L63.384 84.766 L63.384 1 L1 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0.286274 0.929412 0 k 0 0.286274 0.929412 0 K) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR37.668 67.113 m43.924 62.567 L41.535 55.213 L47.791 59.757 L54.046 55.212 L51.657 62.566 L57.914 67.112 L50.18 67.112 L47.791 74.467 L45.402 67.113 L37.668 67.113 Lf16.596 59.757 m22.851 55.212 L20.462 62.566 L26.719 67.112 L18.985 67.112 L16.596 74.467 L14.207 67.113 L6.473 67.113 L12.729 62.567 L10.34 55.213 L16.596 59.757 Lf20.462 20.683 m26.719 25.229 L18.985 25.229 L16.596 32.584 L14.207 25.23 L6.473 25.23 L12.729 20.684 L10.34 13.33 L16.596 17.874 L22.851 13.329 L20.462 20.683 Lf38.447 34.271 m36.058 41.625 L42.315 46.171 L34.581 46.171 L32.192 53.526 L29.803 46.172 L22.069 46.172 L28.325 41.626 L25.936 34.272 L32.192 38.816 L38.447 34.271 Lf51.657 20.683 m57.914 25.229 L50.18 25.229 L47.791 32.584 L45.402 25.23 L37.668 25.23 L43.924 20.684 L41.535 13.33 L47.791 17.874 L54.046 13.329 L51.657 20.683 Lf*U34.581 4.288 m32.192 11.643 L29.803 4.289 L22.069 4.289 L26.5962 1 L37.7885 1 L42.315 4.288 L34.581 4.288 Lf53.261 4.289 m57.7882 1 L63.384 1 L63.384 11.643 L60.995 4.289 L53.261 4.289 Lf4.866 41.625 m11.123 46.171 L3.389 46.171 L1 53.526 L1 38.816 L7.255 34.271 L4.866 41.625 Lf36.058 41.625 m42.315 46.171 L34.581 46.171 L32.192 53.526 L29.803 46.172 L22.069 46.172 L28.325 41.626 L25.936 34.272 L32.192 38.816 L38.447 34.271 L36.058 41.625 Lf53.261 46.172 m59.517 41.626 L57.128 34.272 L63.384 38.816 L63.384 53.526 L60.995 46.172 L53.261 46.172 Lf4.866 83.508 m6.5974 84.766 L1 84.766 L1 80.699 L7.255 76.154 L4.866 83.508 Lf25.936 76.155 m32.192 80.699 L38.447 76.154 L36.058 83.508 L37.7895 84.766 L26.5951 84.766 L28.325 83.509 L25.936 76.155 Lf22.851 55.212 m20.462 62.566 L26.719 67.112 L18.985 67.112 L16.596 74.467 L14.207 67.113 L6.473 67.113 L12.729 62.567 L10.34 55.213 L16.596 59.757 L22.851 55.212 Lf41.535 55.213 m47.791 59.757 L54.046 55.212 L51.657 62.566 L57.914 67.112 L50.18 67.112 L47.791 74.467 L45.402 67.113 L37.668 67.113 L43.924 62.567 L41.535 55.213 Lf50.18 25.229 m47.791 32.584 L45.402 25.23 L37.668 25.23 L43.924 20.684 L41.535 13.33 L47.791 17.874 L54.046 13.329 L51.657 20.683 L57.914 25.229 L50.18 25.229 Lf18.985 25.229 m16.596 32.584 L14.207 25.23 L6.473 25.23 L12.729 20.684 L10.34 13.33 L16.596 17.874 L22.851 13.329 L20.462 20.683 L26.719 25.229 L18.985 25.229 Lf3.388 4.289 m1 11.643 L1 1 L6.5948 1 L11.122 4.289 L3.388 4.289 Lf57.128 76.154 m63.384 80.699 L63.384 84.766 L57.7855 84.766 L59.517 83.508 L57.128 76.154 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Streifen)(Streifen) 8.45 4.6001 80.45 76.6001 [%AI3_Tile(0 O 0 R 0.862745 0.243137 0.972549 0.086275 k 0.862745 0.243137 0.972549 0.086275 K) @(%AI6_BeginPatternLayer0 J 0 j 3.6 w 4 M []0 d0 XR8.2 8.2 m80.7 8.2 LS8.2 22.6001 m80.7 22.6001 LS8.2 37.0002 m80.7 37.0002 LS8.2 51.4 m80.7 51.4 LS8.2 65.8001 m80.7 65.8001 LS8.2 15.4 m80.7 15.4 LS8.2 29.8001 m80.7 29.8001 LS8.2 44.2 m80.7 44.2 LS8.2 58.6001 m80.7 58.6001 LS8.2 73.0002 m80.7 73.0002 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (TriBevel.side)(TriBevel.side) 1.0006 1 29.0006 31.6124 [%AI3_Tile(0 O 0 R 0.34902 0.270588 0.25098 0 k 0.34902 0.270588 0.25098 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR29 4.8087 m29 4.8087 L29.0026 5.4927 L1.0026 5.4927 L1 4.8087 L1 4.8087 L29 4.8087 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.239216 0.176471 0.172549 0 k 0.239216 0.176471 0.172549 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR29.0026 5.4927 m29.0005 9.5045 L1.0005 9.5045 L1.0026 5.4927 L29.0026 5.4927 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.466667 0.372549 0.345098 0.007843 k 0.466667 0.372549 0.345098 0.007843 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR29.0005 9.5045 m29.0011 10.4865 L1.0011 10.4865 L1.0005 9.5045 L29.0005 9.5045 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.34902 0.270588 0.25098 0 k 0.34902 0.270588 0.25098 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR29.0011 10.4865 m29.003 17.209 L1.003 17.209 L1.0011 10.4865 L29.0011 10.4865 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.54902 0.454902 0.419608 0.070588 k 0.54902 0.454902 0.419608 0.070588 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR29.003 17.209 m29.0031 18.3656 L1.0031 18.3656 L1.003 17.209 L29.003 17.209 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.466667 0.372549 0.345098 0.007843 k 0.466667 0.372549 0.345098 0.007843 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR29.0031 18.3656 m29.0006 30.4752 L1.0006 30.4752 L1.0031 18.3656 L29.0031 18.3656 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Wellen-transparent)(Wellen-transparent) 17.926 10.516 68.663 69.012 [%AI3_Tile(0 O 0 R 0.796078 0.172549 0.392157 0 k 0.796078 0.172549 0.392157 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR17.926 69.012 m17.926 10.516 L68.663 10.516 L68.663 69.012 L17.926 69.012 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.54902 0 0.105882 0 k 0.54902 0 0.105882 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.75 w 4 M []0 d0 XR65.335 70.465 m65.881 68.746 67.444 68.168 68.663 69.012 C67.538 69.668 68.011 71.255 69.686 70.933 c72.124 70.464 71.894 67.213 70.53 65.589 c68.561 63.245 64.565 60.995 53.241 71.117 CS39.964 70.465 m40.511 68.746 42.074 68.168 43.293 69.012 C42.168 69.668 42.64 71.255 44.316 70.933 c46.753 70.464 46.524 67.213 45.16 65.589 c43.191 63.245 39.195 60.995 27.87 71.117 cS14.594 70.465 m15.141 68.746 16.704 68.168 17.923 69.012 C16.798 69.668 17.27 71.255 18.945 70.933 c21.382 70.464 21.153 67.213 19.789 65.589 c17.821 63.245 13.825 60.995 2.5 71.117 cS10.959 51.619 m22.282 41.497 26.278 43.747 28.247 46.09 c29.611 47.715 29.841 50.965 27.403 51.434 c25.728 51.757 25.255 50.169 26.38 49.513 C25.161 48.669 23.599 49.248 23.052 50.966 c22.723 51.997 23.38 53.966 24.872 54.903 c27.267 56.406 31.371 56.05 36.328 51.619 c47.653 41.497 51.649 43.746 53.618 46.09 c54.982 47.715 55.212 50.965 52.774 51.434 c51.099 51.757 50.626 50.169 51.751 49.513 C50.532 48.669 48.97 49.248 48.423 50.966 c48.094 51.997 48.751 53.966 50.243 54.903 c52.638 56.406 56.742 56.05 61.699 51.619 C73.024 41.497 77.02 43.747 78.988 46.09 cS70.156 32.12 m65.199 36.551 61.095 36.907 58.7 35.404 c57.208 34.468 56.552 32.499 56.88 31.468 c57.427 29.749 58.99 29.171 60.208 30.015 C59.083 30.671 59.556 32.258 61.231 31.936 c63.669 31.467 63.439 28.216 62.075 26.592 c60.106 24.248 56.11 21.998 44.786 32.12 C39.829 36.551 35.725 36.907 33.33 35.404 c31.838 34.468 31.182 32.499 31.51 31.468 c32.056 29.749 33.619 29.171 34.838 30.015 C33.713 30.671 34.186 32.258 35.861 31.936 c38.299 31.467 38.069 28.216 36.705 26.592 c34.737 24.248 30.74 21.998 19.415 32.12 c14.458 36.551 10.354 36.907 7.96 35.404 cS19.792 7.094 m21.157 8.719 21.386 11.968 18.949 12.437 c17.274 12.76 16.801 11.172 17.926 10.516 C16.708 9.673 15.145 10.252 14.598 11.969 c14.27 13 14.926 14.969 16.418 15.906 c18.812 17.409 22.916 17.053 27.874 12.622 c39.199 2.5 43.195 4.75 45.163 7.094 c46.528 8.719 46.757 11.968 44.32 12.437 c42.644 12.76 42.172 11.172 43.297 10.516 C42.078 9.673 40.515 10.252 39.968 11.969 c39.64 13 40.297 14.969 41.788 15.906 c44.183 17.409 48.287 17.053 53.245 12.622 C64.569 2.5 68.565 4.75 70.534 7.094 c71.898 8.719 72.127 11.968 69.69 12.437 c68.014 12.76 67.542 11.172 68.667 10.516 C67.448 9.673 65.885 10.252 65.338 11.969 c65.011 13 65.667 14.969 67.159 15.906 c69.553 17.409 73.657 17.053 78.615 12.622 cS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Passermarken]) 0 Xs([Passermarken])PcBb2 (Schwarz, Wei\647) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Schwarz, Wei\647)PcBb2 (Chrom) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Chrom)PcBb2 (Gr\637nblau) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Gr\637nblau)PcBb2 (Orange, Gr\637n, Lila) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Orange, Gr\637n, Lila)PcBb2 (Rosa, Gelb, Gr\637n ) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Rosa, Gelb, Gr\637n )PcBb2 (Violett, Rot, Gelb) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Violett, Rot, Gelb)PcBb2 (Regenbogen) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Regenbogen)PcBb2 (Stahlgrau) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Stahlgrau)PcBb0 0 0 0 Bh2 (Wei\647-Rot-Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Wei\647-Rot-Radial)PcBb0 0 0 0 Bh2 (Gelb, Orange-Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Gelb, Orange-Radial)PcBb0 0 0 0 Bh2 (Gelb, Violett-Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Gelb, Violett-Radial)PcBb2 (Gelb, Lila, Orange, Blau) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Gelb, Lila, Orange, Blau)Pc(Pfeil 1.2.au\647en/innen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Pfeil 1.2.au\647en/innen)Pc(Pfeil 1.2.Kante) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Pfeil 1.2.Kante)Pc(Backsteine) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Backsteine)Pc(Schachbrettmuster) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Schachbrettmuster)Pc(Konfetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Konfetti)Pc(Dpllinie1.2.Innen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Dpllinie1.2.Innen)Pc(Dpllinie1.2.Au\647en) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Dpllinie1.2.Au\647en)Pc(Dpllinie1.2.Kante) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Dpllinie1.2.Kante)Pc(Rauten) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Rauten)Pc(Sechseck) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Sechseck)Pc(Lorbeer.Innen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Lorbeer.Innen)Pc(Lorbeer.Au\647en) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Lorbeer.Au\647en)Pc(Lorbeer.Kante) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Lorbeer.Kante)Pc(Bl\612tter) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Bl\612tter)Pc(Punkte) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Punkte)Pc(Kreise) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Kreise)Pc(Seil.Kante) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Seil.Kante)Pc(Schuppen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Schuppen)Pc(SolidStar.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(SolidStar.side)Pc(Stern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Stern)Pc(Streifen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Streifen)Pc(Ecke.Au\647en) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Ecke.Au\647en)Pc(TriBevel.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(TriBevel.side)Pc(Wellen-transparent) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Wellen-transparent)Pc(Schachbrettmuster 1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Schachbrettmuster 1)Pc(Rauten 1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Rauten 1)Pc(Punkte 1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Punkte 1)Pc(Stern 1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Stern 1)PcBb2 (Schwarz & Wei\647) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Schwarz & Wei\647)PcBb2 (Rot & Gelb) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Rot & Gelb)PcBb0 0 0 0 Bh2 (Gelb & Blau Kreis) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Gelb & Blau Kreis)Pc(Gelbe Streifen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Gelbe Streifen)Pc0.901961 0.654902 0 0 0.0353 0.3529 0.651 (PANTONE 300 C) 0 1 Xx(PANTONE 300 C)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 100 Lb(Ebene 1) Ln0 Auu0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR283.0273 448.5464 m283.0273 425.252 l288.0796 425.252 l288.0796 448.5117 l293.6909 448.5117 l293.6909 425.252 l309.7598 425.252 l309.7598 448.2656 l315.4766 448.2656 l315.4766 425.2583 l320.7754 425.2583 l320.7754 448.2656 l326.5635 448.2656 l326.5635 425.2583 l331.8613 425.2583 l331.8613 453.5986 l304.6729 453.5986 l304.6729 430.4097 l298.8491 430.4097 l298.8491 453.564 l278.2202 453.564 l278.2202 448.5464 L283.0273 448.5464 LfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF